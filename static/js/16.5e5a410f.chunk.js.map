{"version":3,"sources":["utility/hooks/useSkin.js","utility/Utils.js","@core/components/avatar/index.js","utility/hooks/useLayout.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","utility/hooks/useRouterTransition.js","@core/layouts/VerticalLayout.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","@core/components/routes/PrivateRoute.js","router/routes/SJPH.js","router/routes/Authentication.js","router/routes/index.js","router/Router.js","App.js"],"names":["useSkin","dispatch","useDispatch","store","useSelector","state","layout","useEffect","element","window","document","body","classList","remove","skin","add","dark","bordered","setSkin","type","handleSkin","isObjEmpty","obj","Object","keys","length","isUserLoggedIn","sessionStorage","getItem","getUserData","JSON","parse","localStorage","getHomeRouteForLoggedInUser","userRole","DefaultRoute","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","props","ref","img","size","icon","color","status","badgeUp","content","Tag","tag","initials","imgWidth","className","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","useLayout","setLayout","value","handleLayout","breakpoint","innerWidth","addEventListener","lastLayout","setLastLayout","handleLastLayout","BlankLayout","useState","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","isHidden","navbarType","footerType","transition","navbarColor","setIsHidden","contentWidth","menuCollapsed","setTransition","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","options","wheelPropagation","skinsArr","name","checked","map","radio","index","marginCondition","id","onChange","for","renderSkinsRadio","classNamePrefix","defaultValue","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","visible","setVisible","pageYOffset","scroll","top","behavior","Footer","Date","getFullYear","logout","removeItem","UserDropdown","username","defaultAvatar","end","Link","to","divider","NavbarUser","ThemeNavbar","setMenuVisibility","ThemeToggler","VerticalMenuHeader","setGroupOpen","menuHover","user","Toggler","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","item","activeItem","LinkTag","externalLink","NavLink","t","useTranslation","disabled","active","navLink","target","newTab","isActive","title","badge","hasActiveChild","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","indexOf","splice","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","ability","useContext","AbilityContext","hasAnyVisibleChild","some","can","action","resource","canViewMenuGroup","canViewMenuItem","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","useRouterTransition","routerTransition","handleRouterTransition","VerticalLayout","navbar","footer","menuVisibility","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","menuHidden","val","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","show","customizer","handleMenuHidden","handleContentWidth","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","usePopper","placement","modifiers","offset","update","attributes","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","routerProps","currentActiveItem","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","query","memo","PublicRoute","route","restrictedRoute","meta","restricted","console","log","fallback","PrivateRoute","role","CompanyProfilePage","lazy","KriteriaSistemJaminanProdukHalalPage","KebijakanEdukasiHalal","SJPHRoutes","path","Login","Register","ForgotPassword","AuthenticationRoutes","publicRoute","getLayout","blank","vertical","horizontal","Home","NotAuthorized","Error","ComingSoon","Routes","replace","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","Wrapper","getRouteMeta","getRoutes","AllRoutes","layoutItem","Router","allRoutes","useRoutes","App","setAllRoutes"],"mappings":"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","file":"static/js/16.5e5a410f.chunk.js","sourcesContent":["// ** React Imports\nimport { useEffect } from 'react'\n\n// ** Store Imports\nimport { handleSkin } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setSkin = type => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== 'light') {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n","import { DefaultRoute } from '../router/routes'\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => sessionStorage.getItem('token')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return DefaultRoute\n  if (userRole === 'client') return '/access-control'\n  return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","//** React Imports\n// import { useEffect, useCallback } from 'react'\n\n// ** Store Imports\nimport { useDispatch, useSelector } from 'react-redux'\nimport { handleLayout, handleLastLayout } from '@store/layout'\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setLayout = value => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = value => {\n    dispatch(handleLastLayout(value))\n  }\n\n  // const handleLayoutUpdate = useCallback(() => {\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\n  //     setLayout('vertical')\n  //     setLastLayout('horizontal')\n  //   }\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n  //     setLayout('horizontal')\n  //   }\n  // }, [])\n\n  // // ** ComponentDidMount\n  // useEffect(() => {\n  //   handleLayoutUpdate()\n  // }, [])\n\n  // useEffect(() => {\n  //   // ** Window Resize Event\n  //   window.addEventListener('resize', handleLayoutUpdate)\n  // }, [store.layout, store.lastLayout])\n\n  if (window) {\n    const breakpoint = 1200\n\n    if (window.innerWidth < breakpoint) {\n      setLayout('vertical')\n    }\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\n        setLayout('vertical')\n      }\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\n        setLayout(store.lastLayout)\n      }\n    })\n  }\n\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\n}\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames('blank-page', {\n        'dark-layout': skin === 'dark'\n      })}\n    >\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { selectThemeColors } from '@utils'\nimport { Settings, X } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport { Input, Label } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    transition,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setTransition,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input\n            type='radio'\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </div>\n\n          <div className='mb-2'>\n            <p className='fw-bold'>Content Width</p>\n            <div className='d-flex'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='full-width'\n                  checked={contentWidth === 'full'}\n                  onChange={() => setContentWidth('full')}\n                />\n                <Label className='form-check-label' for='full-width'>\n                  Full Width\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  id='boxed'\n                  type='radio'\n                  checked={contentWidth === 'boxed'}\n                  onChange={() => setContentWidth('boxed')}\n                />\n                <Label className='form-check-label' for='boxed'>\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex'>\n              <p className='fw-bold me-auto mb-0'>RTL</p>\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </div>\n\n          <div className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='fw-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='fw-bold'>Menu Layout</p>\n          <div className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='vertical-layout'\n                  checked={layout === 'vertical'}\n                  onChange={() => {\n                    setLayout('vertical')\n                    setLastLayout('vertical')\n                  }}\n                />\n                <Label className='form-check-label' for='vertical-layout'>\n                  Vertical\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  type='radio'\n                  id='horizontal-layout'\n                  checked={layout === 'horizontal'}\n                  onChange={() => {\n                    setLayout('horizontal')\n                    setLastLayout('horizontal')\n                  }}\n                />\n                <Label className='form-check-label' for='horizontal-layout'>\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== 'horizontal' ? (\n            <div className='form-switch mb-2 ps-0'>\n              <div className='d-flex align-items-center'>\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\n                <Input\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex align-items-center'>\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\n              <Input\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'horizontal' ? (\n            <div className='mb-2'>\n              <p className='fw-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </div>\n          ) : null}\n\n          <div className='mb-2'>\n            <p className='fw-bold'>{layout === 'horizontal' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\n\nconst ScrollTop = props => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('scroll', () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: 'smooth'\n}\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        {/*<a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>*/}\n          Juan Emmanuel Dharmadjaya\n        {/*</a>*/}\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-end d-none d-md-block'>\n        Hand-crafted & Made only for UMKM\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst logout = () => {\n  sessionStorage.removeItem(\"token\");\n  localStorage.removeItem(\"token\");\n  sessionStorage.removeItem(\"username\");\n  localStorage.removeItem(\"username\");\n  sessionStorage.removeItem(\"id\");\n  localStorage.removeItem(\"id\");\n}\n\nconst UserDropdown = () => {\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name fw-bold'>{sessionStorage.username}</span>\n          <span className='user-status'>User</span>\n        </div>\n        <Avatar img={defaultAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu end>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <User size={14} className='me-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <Mail size={14} className='me-75' />\n          <span className='align-middle'>Inbox</span>\n\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <CheckSquare size={14} className='me-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <MessageSquare size={14} className='me-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem tag={Link} to='/pages/' onClick={e => e.preventDefault()}>\n          <Settings size={14} className='me-75' />\n          <span className='align-middle'>Settings</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <CreditCard size={14} className='me-75' />\n          <span className='align-middle'>Pricing</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <HelpCircle size={14} className='me-75' />\n          <span className='align-middle'>FAQ</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login' onClick={logout}>\n          <Power size={14} className='me-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport UserDropdown from './UserDropdown'\n\nconst NavbarUser = () => {\n  return (\n    <ul className='nav navbar-nav align-items-center ms-auto'>\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <ul className='navbar-nav d-xl-none'>\n          <NavItem className='mobile-menu me-auto'>\n            <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n              <Menu className='ficon' />\n            </NavLink>\n          </NavItem>\n        </ul>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Icons Imports\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\n// ** Utils\nimport { isUserLoggedIn, getHomeRouteForLoggedInUser } from '@utils'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Vars\n  const user = isUserLoggedIn()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item me-auto'>\n          <NavLink to={user ? '/home' : '/login'} className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return 'd-flex align-items-center active'\n                }\n              }\n            })}\n        onClick={e => {\n          if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\n            e.preventDefault()\n          }\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n      currentURL === link ||\n      (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach(child => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n  const { t } = useTranslation()\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active':\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport {\n  canViewMenuItem,\n  canViewMenuGroup,\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\n} from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return canViewMenuGroup(item) || <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return canViewMenuItem(item) || <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","// ** Store Imports\nimport { handleNavbarType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setNavbarType = type => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setFooterType = type => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = value => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** Store Imports\nimport { handleRouterTransition } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRouterTransition = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setTransition = type => {\n    dispatch(handleRouterTransition(type))\n  }\n\n  return { transition: store.routerTransition, setTransition }\n}\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        container={false}\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ skin, setSkin, setMenuVisibility })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          transition={transition}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setTransition={setTransition}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          menuCollapsed={menuCollapsed}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n          setMenuCollapsed={setMenuCollapsed}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","import {Mail, Home, Menu, Circle, Briefcase, Layout, BookOpen} from 'react-feather'\nimport {FaDochub} from \"react-icons/all\";\n\nexport default [\n  {\n    header: 'Misc'\n  },\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'sjphPage',\n    title: 'SJPH Page',\n    icon: <FaDochub size={20} />,\n    children: [\n      {\n        id: 'companyProfile',\n        title: 'Informasi Umum Perusahaan',\n        icon: <Briefcase size={20} />,\n        navLink: '/sjph/company_profile',\n      },\n      {\n        id: 'surKepPTMPHalal',\n        title: 'Kriteria Sistem Jaminan Produk Halal',\n        icon: <Layout size={20} />,\n        navLink: '/sjph/kriteria_sistem_jaminan_produk_halal',\n      },\n      {\n        id: 'kebijakanEdukasiHalal',\n        title: 'Kebijakan dan Edukasi Halal',\n        icon: <BookOpen size={20} />,\n        navLink: '/sjph/kebijakan_dan_edukasi_halal',\n      },\n      {\n        id: 'bahanKepentinganHalal',\n        title: 'Bahan untuk Kepentingan Halal',\n        icon: <Layout size={20} />,\n        navLink: '/coming_soon',\n      },\n      {\n        id: 'kepentinganProduksiPemusnahanProduk',\n        title: 'Kepentingan Produksi dan Pemusnahan Produk',\n        icon: <Layout size={20} />,\n        navLink: '/coming_soon',\n      },      {\n        id: 'auditKajiUlangManajemen',\n        title: 'Audit dan Kaji Ulang Manajemen',\n        icon: <Layout size={20} />,\n        navLink: '/coming_soon',\n      },\n    ]\n  },\n  // {\n  //   id: 'menuLevels',\n  //   title: 'Menu Levels',\n  //   icon: <Menu size={20} />,\n  //   children: [\n  //     {\n  //       id: 'secondLevel',\n  //       title: 'Second Level 2.1',\n  //       icon: <Menu size={12} />,\n  //       navLink: '/sjph/company_profile',\n  //     },\n  //   ]\n  // },\n\n]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\nconst VerticalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames('nav-item', {\n        disabled: item.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                const commonClass = 'd-flex align-items-center'\n                if (isActive && !item.disabled && item.navLink !== '#') {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item active`\n                  } else {\n                    return `${commonClass} nav-link active`\n                  }\n                } else {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item`\n                  } else {\n                    return `${commonClass} nav-link`\n                  }\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { usePopper } from 'react-popper'\nimport { useTranslation } from 'react-i18next'\n\n// ** Utils\nimport { hasActiveChild } from '@layouts/utils'\n\n// ** Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst applyHeight = {\n  enabled: true,\n  name: 'applyHeight',\n  phase: 'beforeWrite',\n  fn: data => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: 'auto'\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest('.dropdown').classList.add('openLeft')\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? 'bottom-end' : 'bottom-start'\n  const popperPlacementSubMenu = isRtl ? 'left-start' : 'right-start'\n\n  // ** Hooks\n  const { t } = useTranslation()\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: isChild ? popperPlacementSubMenu : popperPlacement,\n    modifiers: [\n      applyHeight,\n      {\n        enabled: true,\n        name: 'offset',\n        options: {\n          offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n        }\n      }\n    ]\n  })\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames('dropdown', {\n        show: menuOpen,\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active': hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to='/'\n        onClick={e => e.preventDefault()}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames('dropdown-menu', { 'first-level': submenu === false })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ menuData }) => {\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        container={false}\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? menu({ menuData, routerProps, currentActiveItem }) : <MenuComponent menuData={menuData} />}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          transition={transition}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setTransition={setTransition}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'secondPage',\n    title: 'Second Page',\n    icon: <Mail size={20} />,\n    navLink: '/second-page'\n  }\n]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/horizontal'\n\nconst HorizontalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  const transition = store.layout.routerTransition\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === 'horizontal' && !routeMeta) ||\n    (layoutStored.layout === 'horizontal' && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [routeMeta ? routeMeta.className : '']: routeMeta && routeMeta.className,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': routeMeta && !routeMeta.appLayout,\n          'content-area-wrapper': routeMeta && routeMeta.appLayout,\n          'container-xxl p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: 'content-body' } : {})}>{children}</Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Suspense } from 'react'\nimport { Navigate } from 'react-router-dom'\n\n// ** Utils\nimport { isUserLoggedIn, getHomeRouteForLoggedInUser } from '@utils'\nimport {NavItem} from \"reactstrap\";\n\nconst PublicRoute = ({ children, route }) => {\n  if (route) {\n    const user = isUserLoggedIn()\n\n    const restrictedRoute = route.meta && route.meta.restricted\n    console.log(user)\n\n    // if (user && restrictedRoute) {\n    //   return <Navigate to={getHomeRouteForLoggedInUser(user.role)} />\n    // }\n    if (user && restrictedRoute) {\n      return <Navigate to={'/error'} />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","// ** React Imports\nimport { Navigate } from 'react-router-dom'\nimport { useContext, Suspense } from 'react'\n\n// ** Context Imports\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { isUserLoggedIn, getHomeRouteForLoggedInUser } from '@utils'\nconst PrivateRoute = ({ children, route }) => {\n  // ** Hooks & Vars\n  const ability = useContext(AbilityContext)\n  const user = isUserLoggedIn()\n  // const user = JSON.parse(sessionStorage.getItem('token'))\n\n  if (route) {\n    let action = null\n    let resource = null\n    let restrictedRoute = false\n\n    console.log(user)\n\n    if (route.meta) {\n      action = route.meta.action\n      resource = route.meta.resource\n      restrictedRoute = route.meta.restricted\n    }\n    console.log(restrictedRoute)\n    if (!user) {\n      return <Navigate to='/login' />\n    }\n    if (user && restrictedRoute) {\n      return <Navigate to='/home' />\n    }\n    if (user && restrictedRoute && user.role === 'client') {\n      return <Navigate to='/access-control' />\n    }\n    // if (user && !ability.can(action || 'read', resource)) {\n    //   return <Navigate to='/misc/not-authorized' replace />\n    // }\n    // if (user && !ability.can(action || 'read', resource)) {\n    //   return <Navigate to='/' replace />\n    // }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n","import { lazy } from 'react'\r\n// import KebijakanEdukasiHalal from \"../../views/pages/sjph/module_3/KebijakanEdukasiHalal\";\r\n\r\nconst CompanyProfilePage = lazy(() => import('../../views/pages/sjph/module_1/CompanyProfilePage'))\r\nconst KriteriaSistemJaminanProdukHalalPage = lazy(() => import('../../views/pages/sjph/module_2/KriteriaSistemJaminanProdukHalalPage'))\r\nconst KebijakanEdukasiHalal = lazy(() => import('../../views/pages/sjph/module_3/KebijakanEdukasiHalal'))\r\n\r\nconst SJPHRoutes = [\r\n    {\r\n        path: '/sjph/company_profile',\r\n        element: <CompanyProfilePage />,\r\n    },\r\n    {\r\n        path: '/sjph/kriteria_sistem_jaminan_produk_halal',\r\n        element: <KriteriaSistemJaminanProdukHalalPage />\r\n    },\r\n    {\r\n        path: '/sjph/kebijakan_dan_edukasi_halal',\r\n        element: <KebijakanEdukasiHalal />\r\n    }\r\n]\r\n\r\nexport default SJPHRoutes\r\n","// ** React Imports\r\nimport { lazy } from 'react'\r\nimport blankLayout from \"../../@core/layouts/BlankLayout\";\r\n\r\nconst Login = lazy(() => import('../../views/pages/authentication/Login'))\r\nconst Register = lazy(() => import('../../views/pages/authentication/Register'))\r\nconst ForgotPassword = lazy(() => import('../../views/pages/authentication/ForgotPassword'))\r\n\r\nconst AuthenticationRoutes = [\r\n    {\r\n        path: '/login',\r\n        element: <Login />,\r\n        meta: {\r\n            layout: 'blank',\r\n            publicRoute: true,\r\n            restricted: true\r\n        }\r\n    },\r\n    {\r\n        path: '/register',\r\n        element: <Register />,\r\n        meta: {\r\n            layout: 'blank',\r\n            publicRoute: true,\r\n            restricted: true\r\n        }\r\n    },\r\n    {\r\n        path: '/forgot-password',\r\n        element: <ForgotPassword />,\r\n        meta: {\r\n            layout: 'blank',\r\n            publicRoute: true,\r\n            restricted: true\r\n        }\r\n    },\r\n]\r\n\r\nexport default AuthenticationRoutes\r\n","// ** React Imports\nimport { Fragment, lazy } from 'react'\nimport { Navigate } from 'react-router-dom'\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\n\n// ** Route Components\nimport PublicRoute from '@components/routes/PublicRoute'\nimport PrivateRoute from '@components/routes/PrivateRoute'\n\n// ** Utils\nimport { isObjEmpty } from '@utils'\nimport {Circle, Menu} from \"react-feather\";\n\n// Route Imports\nimport SJPHRoutes from \"./SJPH\";\nimport AuthenticationRoutes from \"./Authentication\";\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = '%s - PasporUMKM'\n\n// ** Default Route\nconst DefaultRoute = '/login'\n\nconst Home = lazy(() => import('../../views/Home'))\nconst CompanyProfilePage = lazy(() => import('../../views/pages/sjph/module_1/CompanyProfilePage'))\nconst Login = lazy(() => import('../../views/pages/authentication/Login'))\nconst Register = lazy(() => import('../../views/pages/authentication/Register'))\nconst ForgotPassword = lazy(() => import('../../views/pages/authentication/ForgotPassword'))\n// const Error = lazy(() => import('../../views/Error'))\nconst NotAuthorized = lazy(() => import('../../views/pages/misc/NotAuthorized'))\nconst Error = lazy(() => import('../../views/pages/misc/Error'))\nconst ComingSoon = lazy(() => import('../../views/pages/misc/ComingSoon'))\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: '/',\n    index: true,\n    element: <Navigate replace to={DefaultRoute} />\n  },\n  {\n    path: '/home',\n    element: <Home />,\n  },\n  // {\n  //   path: '/sjph/company_profile',\n  //   element: <CompanyProfilePage />,\n  // },\n    ...SJPHRoutes,\n    ...AuthenticationRoutes,\n  // {\n  //   path: '/login',\n  //   element: <Login />,\n  //   meta: {\n  //     layout: 'blank',\n  //     publicRoute: true,\n  //     restricted: true\n  //   }\n  // },\n  // {\n  //   path: '/register',\n  //   element: <Register />,\n  //   meta: {\n  //     layout: 'blank',\n  //     publicRoute: true,\n  //     restricted: true\n  //   }\n  // },\n  // {\n  //   path: '/forgot-password',\n  //   element: <ForgotPassword />,\n  //   meta: {\n  //     layout: 'blank',\n  //     publicRoute: true,\n  //     restricted: true\n  //   }\n  // },\n  {\n    path: '/error',\n    element: <Error />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/not_authorized',\n    element: <NotAuthorized />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/coming_soon',\n    element: <ComingSoon />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n]\n\nconst getRouteMeta = route => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta }\n    } else {\n      return {}\n    }\n  }\n}\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n\n  if (Routes) {\n    Routes.filter(route => {\n      let isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n          (route.meta && route.meta.layout && route.meta.layout === layout) ||\n          ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\n      ) {\n        let RouteTag = PrivateRoute\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\n        }\n        if (route.element) {\n          const Wrapper =\n              // eslint-disable-next-line multiline-ternary\n              isObjEmpty(route.element.props) && isBlank === false\n                  ? // eslint-disable-next-line multiline-ternary\n                  LayoutWrapper\n                  : Fragment\n\n          route.element = (\n              <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n                <RouteTag route={route}>{route.element}</RouteTag>\n              </Wrapper>\n          )\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route)\n      }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = layout => {\n  const defaultLayout = layout || 'vertical'\n  const layouts = ['vertical', 'horizontal', 'blank']\n\n  const AllRoutes = []\n\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: '/',\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n","// ** Router imports\nimport { useRoutes } from 'react-router-dom'\n\nconst Router = ({ allRoutes }) => {\n  const routes = useRoutes([...allRoutes])\n\n  return routes\n}\n\nexport default Router\n","import React, { useState, useEffect, Suspense } from 'react'\n\n// ** Router Import\nimport Router from './router/Router'\n\n// ** Routes & Default Routes\nimport { getRoutes } from './router/routes'\n\n// ** Hooks Imports\nimport { useLayout } from '@hooks/useLayout'\n\nconst App = () => {\n  const [allRoutes, setAllRoutes] = useState([])\n\n  // ** Hooks\n  const { layout } = useLayout()\n\n  useEffect(() => {\n    setAllRoutes(getRoutes(layout))\n  }, [layout])\n\n  return (\n    <Suspense fallback={null}>\n      <Router allRoutes={allRoutes} />\n    </Suspense>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}