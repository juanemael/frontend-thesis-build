{"version":3,"sources":["views/pages/authentication/Register.js","utility/ApiRequest.js","utility/ApiConfig.js","assets/images/pages/register-v2.svg","@core/components/input-password-toggle/index.js","models/User.js"],"names":["roleOptions","value","label","Register","useState","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","userModel","UserModels","navigate","useNavigate","ToastDanger","className","size","color","icon","onClick","toast","dismiss","t","id","ToastEmpty","ToastEmail","source","require","default","submission","a","isEmail","body","register","result","success","swal","fire","then","console","error","error_message","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","xs","md","tag","onSubmit","for","type","placeholder","onChange","target","autoFocus","required","theme","selectThemeColors","classNamePrefix","name","options","opt","isClearable","href","block","ApiRequest","set","endpoint","method","token","sessionStorage","localStorage","log","JSON","stringify","request","headers","Authorization","Accept","fetch","apiConfig","base_url","response","ok","json","msg","code","window","location","reload","setMultipart","module","exports","InputPasswordToggle","forwardRef","props","ref","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","classnames","renderIcon","defaultProps","User","getAll","getById","admin_id","deleteUser","updateUser","changePassword","login"],"mappings":"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","file":"static/js/22.2cc054af.chunk.js","sourcesContent":["// ** React Imports\nimport {Link, useNavigate} from 'react-router-dom'\n\n// ** Custom Hooks\n// import { useSkin } from '@hooks/useSkin'\n\n// ** Icons Imports\nimport {Facebook, Twitter, Mail, GitHub, X, User} from 'react-feather'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\nimport swal from 'sweetalert2'\n\nimport * as yup from 'yup'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Label,\n  Input,\n  Button,\n  FormFeedback,\n  InputGroupText,\n  InputGroup\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\nimport {useState} from \"react\"\nimport UserModels from '../../../models/User'\nimport {useForm} from \"react-hook-form\"\nimport {yupResolver} from \"@hookform/resolvers/yup\"\nimport Avatar from \"../../../@core/components/avatar\"\nimport {FaInfo} from \"react-icons/fa\"\nimport toast from \"react-hot-toast\"\nimport isEmail from \"validator/es/lib/isEmail\";\nimport Select from \"react-select\";\nimport { selectThemeColors } from '@utils'\n\nconst roleOptions = [\n  { value: 'UMKM', label: 'UMKM' },\n  { value: 'PENYELIA_HALAL', label: 'Penyelia Halal' },\n  { value: 'AUDITOR', label: 'Auditor' },\n]\n\nconst Register = () => {\n  // ** Hooks\n  // const {skin} = useSkin()\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [role, setRole] = useState(\"\")\n\n  const userModel = new UserModels()\n  const navigate = useNavigate()\n\n  const ToastDanger = () =>{\n    return (\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='danger' icon={<FaInfo size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='d-flex justify-content-between'>\n              <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n            </div>\n            <span>Password tidak sama dengan konfirmasi password. Tolong coba lagi.</span>\n          </div>\n        </div>\n    )\n  }\n\n  const ToastEmpty = () =>{\n    return (\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='danger' icon={<FaInfo size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='d-flex justify-content-between'>\n              <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n            </div>\n            <span>Tolong isi kolom yang kosong.</span>\n          </div>\n        </div>\n    )\n  }\n\n  const ToastEmail = () =>{\n    return (\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='danger' icon={<FaInfo size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='d-flex justify-content-between'>\n              <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n            </div>\n            <span>Tolong isi kolom email dengan benar.</span>\n          </div>\n        </div>\n    )\n  }\n\n  // const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\n  //     source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const source = require(`@src/assets/images/pages/register-v2.svg`).default\n\n  const submission = async () => {\n\n    if (!username || !email || !password) {\n      toast(t =>(\n          <ToastEmpty t={t} />\n      ))\n    } else if (!isEmail(email)) {\n      toast(t =>(\n          <ToastEmail t={t} />\n      ))\n    } else {\n        if (password !== confirmPassword) {\n        toast(t =>(\n            <ToastDanger t={t} />\n        ))\n      } else {\n            const body = {\n              username,\n              email,\n              password,\n              role: role.value\n            }\n\n            try {\n              const result = await userModel.register(body)\n              if ((result.id) || (result.success)) {\n                await swal.fire('', \"Data berhasil di simpan\", 'success')\n                    .then(() => {\n                      navigate('/login')\n                    })\n              } else {\n                await swal.fire('', \"Data gagal disimpan\", 'error')\n              }\n            } catch (e) {\n              console.error(e)\n              await swal.fire('Error', e.error_message ? e.error_message : \"Terjadi Error! Mohon kontak admin. \", \"error\")\n            }\n          }\n        }\n  }\n\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>PasporUMKM</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' xs='12' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='fw-bold mb-1'>\n              Perjalananmu dimulai dari sini 🚀\n            </CardTitle>\n            <CardText className='mb-2'>Membuat proses sertifikasi menjadi menyenangkan!</CardText>\n            <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <InputGroup className='input-group-merge'>\n                  <InputGroupText>\n                    <User size={15} />\n                  </InputGroupText>\n                <Input type='text' id='register-username' placeholder='username' onChange={(e) => { setUsername(e.target.value) }} autoFocus required />\n                </InputGroup>\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <InputGroup className='input-group-merge'>\n                  <InputGroupText>\n                    <Mail size={15} />\n                  </InputGroupText>\n                <Input type='email' id='register-email' onChange={(e) => { setEmail(e.target.value) }} placeholder='email (contoh@email.com)' required/>\n                </InputGroup>\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <InputPasswordToggle className='input-group-merge' id='register-password' onChange={(e) => { setPassword(e.target.value) }}/>\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-password'>\n                  Ketik Ulang Password\n                </Label>\n                <InputPasswordToggle className='input-group-merge' id='confirm-password' onChange={(e) => { setConfirmPassword(e.target.value) }}/>\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label'>Daftar Sebagai</Label>\n                <Select\n                    theme={selectThemeColors}\n                    className='react-select'\n                    classNamePrefix='select'\n                    // defaultValue={roleOptions[1]}\n                    placeholder={\"Pilih disini\"}\n                    name='clear'\n                    options={roleOptions}\n                    onChange={(opt)=>{\n                      setRole(opt)\n                    }}\n                    isClearable\n                />\n                </div>\n              <div className='form-check mb-1'>\n                <Input type='checkbox' id='terms' />\n                <Label className='form-check-label' for='terms'>\n                  Saya mengerti\n                  <a className='ms-25' href='/src/views/pages' onClick={e => e.preventDefault()}>\n                    tentang kebijakan dan ketentuan.\n                  </a>\n                </Label>\n              </div>\n              <Button onClick={() => {\n                submission()\n              }} color='primary' block>\n                Sign up\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>Sudah punya akun?</span>\n              <Link to='/login'>\n                <span>Sign in disini</span>\n              </Link>\n            </p>\n            {/*<div className='divider my-2'>*/}\n            {/*  <div className='divider-text'>or</div>*/}\n            {/*</div>*/}\n            {/*<div className='auth-footer-btn d-flex justify-content-center'>*/}\n            {/*  <Button color='facebook'>*/}\n            {/*    <Facebook size={14} />*/}\n            {/*  </Button>*/}\n            {/*  <Button color='twitter'>*/}\n            {/*    <Twitter size={14} />*/}\n            {/*  </Button>*/}\n            {/*  <Button color='google'>*/}\n            {/*    <Mail size={14} />*/}\n            {/*  </Button>*/}\n            {/*  <Button className='me-0' color='github'>*/}\n            {/*    <GitHub size={14} />*/}\n            {/*  </Button>*/}\n            {/*</div>*/}\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Register\n","\r\nimport apiConfig from \"./ApiConfig\"\r\n\r\nexport default class ApiRequest {\r\n    static set = async (endpoint, method, body) => {\r\n\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        // console.log('API ACCESS: ' + token);\r\n        console.log('BODY', JSON.stringify(body))\r\n        const request = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                Accept: 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n            // body: \"afdadsf\"\r\n\r\n        }\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, request)\r\n\r\n        if (response.ok) {\r\n            return response.json()\r\n        }\r\n\r\n        const error = await response.json()\r\n        console.log(error)\r\n        console.log(error.msg)\r\n\r\n        if (error.code === 'JWT_EXPIRED' || error.code === 'NO_TOKEN_PROVIDED' || error.code === 'INVALID_TOKEN' || error.code === 'BAD_TOKEN_FORMAT' || error.code === 'NO_SECRET_DEFINED' || error.error_message === 'JWT_MALFORMED' || error.error_message?.msg === 'JWT_MALFORMED' || error.error_message === 'JWT_EXPIRED' || error.code === \"SUBSCRIPTION_EXPIRED\") {\r\n            delete sessionStorage.token\r\n            delete localStorage.token\r\n            // alert('Login timeout')\r\n            window.location.reload()\r\n            throw error\r\n        }\r\n\r\n        throw error\r\n    }\r\n\r\n    static setMultipart = async (endpoint, method, body) => {\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, {\r\n            method,\r\n            headers: {\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body\r\n            // body: \"afdadsf\"\r\n        })\r\n\r\n        if (response.ok) {\r\n            console.log(response)\r\n\r\n            return response.json()\r\n        } else {\r\n\r\n            const error = await response.json()\r\n\r\n            console.log(error)\r\n\r\n            throw error\r\n        }\r\n    }\r\n}\r\n","module.exports = {\r\n    base_url: 'https://api.pasporumkm.com'\r\n}","export default __webpack_public_path__ + \"static/media/register-v2.24c0a62e.svg\";","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {Eye, EyeOff, Lock} from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={ 'input-group-merge'}\n      >\n          <InputGroupText>\n            <Lock size={15} />\n          </InputGroupText>\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","import ApiRequest from \"../utility/ApiRequest\"\r\n\r\nexport default class User {\r\n    static login = async (email, password) => {\r\n        return await ApiRequest.set('/ppkm/user/login', \"POST\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    getAll = async () => {\r\n        return await ApiRequest.set(\"/ppkm/users\", \"GET\")\r\n    }\r\n\r\n    getById = async (admin_id) => {\r\n        return await ApiRequest.set(`/ppkm/user/${admin_id}`, \"GET\")\r\n    }\r\n\r\n    deleteUser = async (id) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"DELETE\")\r\n    }\r\n\r\n    updateUser = async (id, body) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"PUT\", body)\r\n    }\r\n\r\n    changePassword = async (id, body) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"POST\", body)\r\n    }\r\n\r\n    register = async (body) => {\r\n        return await ApiRequest.set(`/ppkm/user/register`, 'POST', body)\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}