{"version":3,"sources":["models/SJPHKu.js","views/tables/sjph/my_sjph/MySJPHTable.js","views/pages/sjph/my_sjph/MySJPHPage.js"],"names":["SJPHKu","getAll","a","ApiRequest","set","getNamaPerusahaan","id","createSJPH","body","defaultValues","firstName","lastName","username","MySJPHTable","useState","sjphName","setSJPHName","sjphModel","SJPHModels","navigate","useNavigate","show","setShow","useForm","errors","control","setError","handleSubmit","formState","submit","nama_sjph","result","success","swal","fire","then","console","error","error_message","isOpen","toggle","className","tag","xs","for","placeholder","value","onChange","e","target","invalid","onClick","color","type","outline","responsive","sm","MySJPHPage"],"mappings":"mOAEqBA,E,mDACjBC,O,sBAAS,sBAAAC,EAAA,sEACQC,IAAWC,IAAI,QAAS,OADhC,mF,KAITC,kB,uCAAoB,WAAOC,GAAP,SAAAJ,EAAA,sEACHC,IAAWC,IAAX,gCAAwCE,GAAM,OAD3C,mF,2DAIpBC,W,uCAAa,WAAOC,GAAP,SAAAN,EAAA,sEACIC,IAAWC,IAAX,QAAwB,OAAQI,GADpC,mF,kHCuCXC,EAAgB,CAClBC,UAAW,MACXC,SAAU,SACVC,SAAU,WA4HCC,EA1HK,WAEhB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkDF,mBAAS,IAA3D,mBACA,GADA,UACoDA,mBAAS,KAA7D,mBAGMG,GAHN,UAGkB,IAAIC,GAEhBC,EAAWC,cAGjB,EAAwBN,oBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAGA,EAKIC,YAAQ,CAAEd,kBADGe,GAJjB,EACIC,QADJ,EAEIC,SAFJ,EAGIC,aAHJ,EAIIC,UAAaJ,QAkBXK,EAAM,uCAAG,8BAAA3B,EAAA,6DACLM,EAAO,CACTsB,UAAWf,GAFJ,kBAKcE,EAAUV,WAAWC,GALnC,YAKDuB,EALC,QAMKzB,KAAMyB,EAAOC,QANlB,iCAOGC,IAAKC,KAAK,GAAG,0BAA0B,WACxCC,MAAK,WACFhB,EAAS,oBATd,gDAYGc,IAAKC,KAAK,GAAG,sBAAuB,SAZvC,iEAePE,QAAQC,MAAR,MAfO,UAgBDJ,IAAKC,KAAK,QAAS,KAAEI,cAAgB,KAAEA,cAAgB,sCAhBtD,0DAAH,qDA6BZ,OACI,eAAC,WAAD,WACI,eAAC,IAAD,CAAOC,OAAQlB,EAAMmB,OAAQ,kBAAMlB,GAASD,IAAOoB,UAAU,iCAA7D,UACI,cAAC,IAAD,CAAaA,UAAU,iBAAiBD,OAAQ,kBAAMlB,GAASD,MAC/D,eAAC,IAAD,CAAWoB,UAAU,qBAArB,UACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,OAAd,+BACA,gEAEJ,eAAC,IAAD,CAAKC,IAAI,OAAOD,UAAU,aAA1B,UACI,eAAC,IAAD,CAAKE,GAAI,GAAT,UACI,cAAC,IAAD,CAAOF,UAAU,aAAaG,IAAI,WAAlC,uBAGA,cAAC,IAAD,CAAOtC,GAAG,WAAWuC,YAAY,kBAAkBC,MAAO/B,EAAUgC,SAAU,SAACC,GAAD,OAAMhC,EAAYgC,EAAEC,OAAOH,QAAQI,QAAS1B,EAAOT,WAAY,OAEjJ,eAAC,IAAD,CAAK4B,GAAI,GAAIF,UAAU,yBAAvB,UACI,cAAC,IAAD,CAAQU,QAAStB,EAAQY,UAAU,OAAOW,MAAM,UAAhD,oBAGA,cAAC,IAAD,CAAQC,KAAK,QAAQD,MAAM,YAAYE,SAAO,EAACH,QAAS,kBAAM7B,GAAQ,IAAtE,iCAOhB,sBAAKmB,UAAU,iBAAf,UACI,oBAAIA,UAAU,OAAd,yBACA,uBAAOA,UAAU,aAAjB,uEAEJ,eAAC,IAAD,CAAOc,YAAU,EAAjB,UACI,gCACA,+BACI,qCACA,2CACA,4CACA,6CACA,2CAGJ,6BAxCR,OA4CI,cAAC,IAAD,CAAKC,GAAG,KAAR,SACI,qBAAKf,UAAU,6BAAf,SACI,cAAC,IAAD,CAAQA,UAAU,OAAOW,MAAM,UAAUD,QAAS,kBAAK7B,GAAQ,IAA/D,4BCrJLmC,UAhBI,WAEf,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,0BAEF,cAAC,IAAD,UACI,cAAC,EAAD","file":"static/js/24.3d59c2f7.chunk.js","sourcesContent":["import ApiRequest from \"../utility/ApiRequest\"\r\n\r\nexport default class SJPHKu {\r\n    getAll = async () => {\r\n        return await ApiRequest.set(\"/sjph\", \"GET\")\r\n    }\r\n\r\n    getNamaPerusahaan = async (id) => {\r\n        return await ApiRequest.set(`/sjph/nama_perusahaan/${id}`, \"GET\")\r\n    }\r\n\r\n    createSJPH = async (body) => {\r\n        return await ApiRequest.set(`/sjph`, 'POST', body)\r\n    }\r\n\r\n}\r\n","// ** Reactstrap Imports\r\nimport {\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    UncontrolledDropdown,\r\n    Badge,\r\n    Table,\r\n    Col,\r\n    Button,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Row, Label, Input, FormFeedback, Modal\r\n} from 'reactstrap'\r\nimport '@styles/react/libs/editor/editor.scss'\r\nimport {useState, Fragment} from \"react\";\r\nimport SJPHModels from \"../../../../models/SJPHKu\";\r\nimport swal from 'sweetalert2'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {Check, Edit, MoreVertical, Trash, X} from \"react-feather\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\n\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst statusOptions = [\r\n    { value: 'active', label: 'Active' },\r\n    { value: 'inactive', label: 'Inactive' },\r\n    { value: 'suspended', label: 'Suspended' }\r\n]\r\n\r\nconst countryOptions = [\r\n    { value: 'uk', label: 'UK' },\r\n    { value: 'usa', label: 'USA' },\r\n    { value: 'france', label: 'France' },\r\n    { value: 'russia', label: 'Russia' },\r\n    { value: 'canada', label: 'Canada' }\r\n]\r\n\r\nconst languageOptions = [\r\n    { value: 'english', label: 'English' },\r\n    { value: 'spanish', label: 'Spanish' },\r\n    { value: 'french', label: 'French' },\r\n    { value: 'german', label: 'German' },\r\n    { value: 'dutch', label: 'Dutch' }\r\n]\r\n\r\nconst defaultValues = {\r\n    firstName: 'Bob',\r\n    lastName: 'Barton',\r\n    username: 'bob.dev'\r\n}\r\nconst MySJPHTable = () => {\r\n\r\n    const [sjphName, setSJPHName] = useState(\"\")\r\n    const [tempatPersetujuan, setTempatPersetujuan] = useState(\"\")\r\n    const [tanggalPersetujuan, setTanggalPersetujuan] = useState(\"\")\r\n\r\n\r\n    const sjphModel = new SJPHModels()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // ** States\r\n    const [show, setShow] = useState(false)\r\n\r\n    // ** Hooks\r\n    const {\r\n        control,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm({ defaultValues })\r\n\r\n    const onSubmitModal = data => {\r\n        if (Object.values(data).every(field => field.length > 0)) {\r\n            return null\r\n        } else {\r\n            for (const key in data) {\r\n                if (data[key].length === 0) {\r\n                    setError(key, {\r\n                        type: 'manual'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const submit = async () => {\r\n        const body = {\r\n            nama_sjph: sjphName\r\n        }\r\n        try {\r\n            const result = await sjphModel.createSJPH(body)\r\n            if ((result.id)||(result.success)) {\r\n                await swal.fire('','Data berhasil di simpan','success')\r\n                    .then(()=>{\r\n                        navigate('/sjph/sjph_ku')\r\n                    })\r\n            } else {\r\n                await swal.fire('','Data gagal disimpan', 'error')\r\n            }\r\n        } catch (e) {\r\n            console.error(e)\r\n            await swal.fire('Error', e.error_message ? e.error_message : \"Terjadi Error! Mohon kontak admin.\")\r\n        }\r\n    }\r\n\r\n    const getSJPH = async () => {\r\n        try {\r\n            const result = await sjphModel.getAll()\r\n\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Modal isOpen={show} toggle={() => setShow(!show)} className='modal-dialog-centered modal-lg'>\r\n                <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n                <ModalBody className='px-sm-5 mx-50 pb-5'>\r\n                    <div className='text-center mb-2'>\r\n                        <h1 className='mb-1'>Tambah Data Tabel</h1>\r\n                        <p>Tambah data tabelmu sekarang</p>\r\n                    </div>\r\n                    <Row tag='form' className='gy-1 pt-75'>\r\n                        <Col xs={12}>\r\n                            <Label className='form-label' for='sjphName'>\r\n                                SJPH Name\r\n                            </Label>\r\n                            <Input id='sjphName' placeholder='SJPH Tahun 2022' value={sjphName} onChange={(e)=> setSJPHName(e.target.value)} invalid={errors.sjphName && true} />\r\n                        </Col>\r\n                        <Col xs={12} className='text-center mt-2 pt-50'>\r\n                            <Button onClick={submit} className='me-1' color='primary'>\r\n                                Submit\r\n                            </Button>\r\n                            <Button type='reset' color='secondary' outline onClick={() => setShow(false)}>\r\n                                Discard\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n            <div className='content-header'>\r\n                <h3 className='mb-0'>Daftar SJPH</h3>\r\n                <small className='text-muted'>Berikut adalah tabel daftar SJPH yang dibuat oleh kamu</small>\r\n            </div>\r\n            <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th>No.</th>\r\n                    <th>SJPH Name</th>\r\n                    <th>Created At</th>\r\n                    <th>Modified At</th>\r\n                    <th>Menu</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                </tbody>\r\n            </Table>\r\n            &nbsp;\r\n            <Col sm='12'>\r\n                <div className='d-flex justify-content-end'>\r\n                    <Button className='me-1' color='primary' onClick={()=> setShow(true)}>\r\n                        Tambah\r\n                    </Button>\r\n                </div>\r\n            </Col>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nexport default MySJPHTable\r\n","import {Card, CardHeader, CardBody, CardTitle, CardText, Progress} from 'reactstrap'\nimport MySJPHTable from \"../../../tables/sjph/my_sjph/MySJPHTable\";\n\nconst MySJPHPage = () => {\n\n    return (\n      <div>\n        <Card>\n          <CardHeader>\n            <CardTitle> SJPH-Ku </CardTitle>\n          </CardHeader>\n          <CardBody>\n              <MySJPHTable />\n          </CardBody>\n        </Card>\n      </div>\n    )\n}\n\nexport default MySJPHPage\n"],"sourceRoot":""}