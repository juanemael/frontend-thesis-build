{"version":3,"sources":["router/Router.js","App.js","utility/Utils.js","utility/hooks/useSkin.js","@core/components/avatar/index.js","@core/layouts/utils.js","utility/hooks/useRTL.js","utility/hooks/useLayout.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","utility/hooks/useRouterTransition.js","navigation/vertical/index.js","@core/layouts/BlankLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","@core/components/routes/PrivateRoute.js","router/routes/SJPH.js","router/routes/Authentication.js","router/routes/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js"],"names":["Router","allRoutes","useRoutes","App","useState","setAllRoutes","layout","useLayout","useEffect","getRoutes","fallback","isObjEmpty","obj","Object","keys","length","isUserLoggedIn","sessionStorage","getItem","getHomeRouteForLoggedInUser","userRole","DefaultRoute","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","useSkin","dispatch","useDispatch","store","useSelector","state","element","window","document","body","classList","remove","skin","add","dark","bordered","setSkin","type","handleSkin","Avatar","forwardRef","props","ref","img","size","icon","color","status","badgeUp","content","Tag","tag","initials","imgWidth","className","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","hasActiveChild","currentUrl","child","navLink","includes","removeChildren","openGroup","currentActiveGroup","id","index","indexOf","splice","useRTL","isRtl","isRTL","getElementsByTagName","setAttribute","value","handleRTL","setLayout","handleLayout","breakpoint","innerWidth","addEventListener","lastLayout","setLastLayout","handleLastLayout","Customizer","setIsRtl","isHidden","navbarType","footerType","transition","navbarColor","setIsHidden","contentWidth","menuCollapsed","setTransition","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","options","wheelPropagation","skinsArr","name","checked","map","radio","marginCondition","onChange","for","renderSkinsRadio","classNamePrefix","defaultValue","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","visible","setVisible","pageYOffset","scroll","top","behavior","Footer","Date","getFullYear","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","useRouterTransition","routerTransition","handleRouterTransition","title","disabled","sjph_id","BlankLayout","isMounted","setIsMounted","HorizontalNavMenuLink","isChild","setMenuOpen","LinkTag","externalLink","NavLink","t","useTranslation","target","newTab","to","commonClass","isActive","applyHeight","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","currentURL","useLocation","pathname","usePopper","placement","modifiers","offset","update","attributes","onMouseEnter","onMouseLeave","show","parentItem","items","HorizontalNavMenuItems","Components","TagName","resolveNavItemComponent","canViewMenuGroup","HorizontalMenu","menuData","HorizontalLayout","navbar","footer","menu","navbarScrolled","setNavbarScrolled","layoutStore","menuHidden","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","container","themeConfig","app","appLogoImage","appName","light","routerProps","currentActiveItem","customizer","val","handleMenuHidden","handleContentWidth","scrollTop","navigation","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","handleMenuCollapsed","query","memo","PublicRoute","route","user","restrictedRoute","meta","restricted","console","log","PrivateRoute","useContext","AbilityContext","action","resource","role","SJPHKuPage","lazy","CompanyProfilePage","KriteriaSistemJaminanProdukHalalPage","KebijakanEdukasiHalalPage","BahanKepentinganHalalPage","KepentinganProduksiDistribusiProdukPage","KajiUlangManajemenPage","PDFRenderer","SJPHRoutes","path","Login","Register","ForgotPassword","AuthenticationRoutes","publicRoute","getLayout","blank","vertical","VerticalLayout","horizontal","Home","NotAuthorized","Error","ComingSoon","Routes","replace","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","Wrapper","getRouteMeta","AllRoutes","layoutItem","VerticalMenuHeader","setMenuVisibility","setGroupOpen","menuHover","Toggler","VerticalNavMenuLink","activeItem","active","badge","VerticalNavMenuGroup","groupOpen","groupActive","setGroupActive","setCurrentActiveGroup","location","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","VerticalNavMenuSectionHeader","VerticalMenuNavItems","Sidebar","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onScrollY","current","contains","scrollMenu","menuVisibility","windowWidth","setWindowWidth","handleWindowWidth","logout","clear","localStorage","removeItem","UserDropdown","useNavigate","username","defaultAvatar","end","Link","divider","NavbarUser","ThemeNavbar","ThemeToggler"],"mappings":"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","file":"static/js/14.6fb2a9d1.chunk.js","sourcesContent":["// ** Router imports\nimport { useRoutes } from 'react-router-dom'\n\nconst Router = ({ allRoutes }) => {\n  const routes = useRoutes([...allRoutes])\n\n  return routes\n}\n\nexport default Router\n","import React, { useState, useEffect, Suspense } from 'react'\n\n// ** Router Import\nimport Router from './router/Router'\n\n// ** Routes & Default Routes\nimport { getRoutes } from './router/routes'\n\n// ** Hooks Imports\nimport { useLayout } from '@hooks/useLayout'\n\nconst App = () => {\n  const [allRoutes, setAllRoutes] = useState([])\n\n  // ** Hooks\n  const { layout } = useLayout()\n\n  useEffect(() => {\n    setAllRoutes(getRoutes(layout))\n  }, [layout])\n\n  return (\n    <Suspense fallback={null}>\n      <Router allRoutes={allRoutes} />\n    </Suspense>\n  )\n}\n\nexport default App\n","import { DefaultRoute } from '../router/routes'\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => sessionStorage.getItem('token')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return DefaultRoute\n  if (userRole === 'client') return '/access-control'\n  return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { useEffect } from 'react'\n\n// ** Store Imports\nimport { handleSkin } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setSkin = type => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== 'light') {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n      currentURL === link ||\n      (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach(child => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","//** React Imports\n// import { useEffect, useCallback } from 'react'\n\n// ** Store Imports\nimport { useDispatch, useSelector } from 'react-redux'\nimport { handleLayout, handleLastLayout } from '@store/layout'\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setLayout = value => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = value => {\n    dispatch(handleLastLayout(value))\n  }\n\n  // const handleLayoutUpdate = useCallback(() => {\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\n  //     setLayout('vertical')\n  //     setLastLayout('horizontal')\n  //   }\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n  //     setLayout('horizontal')\n  //   }\n  // }, [])\n\n  // // ** ComponentDidMount\n  // useEffect(() => {\n  //   handleLayoutUpdate()\n  // }, [])\n\n  // useEffect(() => {\n  //   // ** Window Resize Event\n  //   window.addEventListener('resize', handleLayoutUpdate)\n  // }, [store.layout, store.lastLayout])\n\n  if (window) {\n    const breakpoint = 1200\n\n    if (window.innerWidth < breakpoint) {\n      setLayout('vertical')\n    }\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\n        setLayout('vertical')\n      }\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\n        setLayout(store.lastLayout)\n      }\n    })\n  }\n\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\n}\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { selectThemeColors } from '@utils'\nimport { Settings, X } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport { Input, Label } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    transition,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setTransition,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input\n            type='radio'\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </div>\n\n          <div className='mb-2'>\n            <p className='fw-bold'>Content Width</p>\n            <div className='d-flex'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='full-width'\n                  checked={contentWidth === 'full'}\n                  onChange={() => setContentWidth('full')}\n                />\n                <Label className='form-check-label' for='full-width'>\n                  Full Width\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  id='boxed'\n                  type='radio'\n                  checked={contentWidth === 'boxed'}\n                  onChange={() => setContentWidth('boxed')}\n                />\n                <Label className='form-check-label' for='boxed'>\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex'>\n              <p className='fw-bold me-auto mb-0'>RTL</p>\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </div>\n\n          <div className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='fw-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='fw-bold'>Menu Layout</p>\n          <div className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='vertical-layout'\n                  checked={layout === 'vertical'}\n                  onChange={() => {\n                    setLayout('vertical')\n                    setLastLayout('vertical')\n                  }}\n                />\n                <Label className='form-check-label' for='vertical-layout'>\n                  Vertical\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  type='radio'\n                  id='horizontal-layout'\n                  checked={layout === 'horizontal'}\n                  onChange={() => {\n                    setLayout('horizontal')\n                    setLastLayout('horizontal')\n                  }}\n                />\n                <Label className='form-check-label' for='horizontal-layout'>\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== 'horizontal' ? (\n            <div className='form-switch mb-2 ps-0'>\n              <div className='d-flex align-items-center'>\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\n                <Input\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex align-items-center'>\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\n              <Input\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'horizontal' ? (\n            <div className='mb-2'>\n              <p className='fw-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </div>\n          ) : null}\n\n          <div className='mb-2'>\n            <p className='fw-bold'>{layout === 'horizontal' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\n\nconst ScrollTop = props => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('scroll', () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: 'smooth'\n}\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        {/*<a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>*/}\n          Juan Emmanuel Dharmadjaya\n        {/*</a>*/}\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-end d-none d-md-block'>\n        Hand-crafted & Made only for UMKM\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** Store Imports\nimport { handleNavbarType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setNavbarType = type => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setFooterType = type => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = value => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** Store Imports\nimport { handleRouterTransition } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRouterTransition = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setTransition = type => {\n    dispatch(handleRouterTransition(type))\n  }\n\n  return { transition: store.routerTransition, setTransition }\n}\n","import {\n  Mail,\n  Home,\n  Menu,\n  Circle,\n  Briefcase,\n  Layout,\n  BookOpen,\n  ShoppingBag,\n  Target,\n  Smile,\n  Repeat,\n  Book, Bookmark\n} from 'react-feather'\nimport {FaDochub} from \"react-icons/all\";\n\nexport default [\n  {\n    header: 'User'\n  },\n  {\n    id: 'home',\n    title: 'Beranda',\n    icon: <Home size={20} />,\n    navLink: '/beranda'\n  },\n  {\n    header: 'Sertifikasi Halal'\n  },\n  {\n    id: 'sjphDoc',\n    title: 'Dokumen SJPH',\n    icon: <FaDochub size={20} />,\n    children: [\n      {\n        id: 'sjphKu',\n        title: 'SJPH-ku',\n        icon: <Bookmark size={20} />,\n        navLink: '/sjph/sjph_ku',\n      },\n      {\n        id: 'companyProfile',\n        title: 'Informasi Umum Perusahaan',\n        icon: <Briefcase size={20} />,\n        navLink: '/sjph/informasi_umum_perusahaan',\n        disabled: !sessionStorage.sjph_id\n      },\n      {\n        id: 'surKepPTMPHalal',\n        title: 'Kriteria Sistem Jaminan Produk Halal',\n        icon: <Layout size={20} />,\n        navLink: '/sjph/kriteria_sistem_jaminan_produk_halal',\n        disabled: !sessionStorage.sjph_id\n      },\n      {\n        id: 'kebijakanEdukasiHalal',\n        title: 'Kebijakan dan Edukasi Halal',\n        icon: <BookOpen size={20} />,\n        navLink: '/sjph/kebijakan_dan_edukasi_halal',\n        disabled: !sessionStorage.sjph_id\n      },\n      {\n        id: 'bahanKepentinganHalal',\n        title: 'Bahan untuk Kepentingan Halal',\n        icon: <ShoppingBag size={20} />,\n        navLink: '/sjph/bahan_untuk_kepentingan_halal',\n        disabled: !sessionStorage.sjph_id\n      },\n      {\n        id: 'kepentinganProduksiDistribusiProduk',\n        title: 'Kepentingan Produksi dan Distribusi Produk',\n        icon: <Repeat size={20} />,\n        navLink: '/sjph/kepentingan_produksi_dan_distribusi_produk',\n        disabled: !sessionStorage.sjph_id\n      },\n      {\n        id: 'auditKajiUlangManajemen',\n        title: 'Audit dan Kaji Ulang Manajemen',\n        icon: <Smile size={20} />,\n        navLink: '/sjph/kaji_ulang_manajemen',\n        disabled: !sessionStorage.sjph_id\n      },\n    ]\n  },\n  // {\n  //   id: 'menuLevels',\n  //   title: 'Menu Levels',\n  //   icon: <Menu size={20} />,\n  //   children: [\n  //     {\n  //       id: 'secondLevel',\n  //       title: 'Second Level 2.1',\n  //       icon: <Menu size={12} />,\n  //       navLink: '/sjph/company_profile',\n  //     },\n  //   ]\n  // },\n\n]\n// Kami berkomitmen dan bertanggung jawab untuk menghasilkan produk halal secara konsisten dan berkesinambungan dengan melakukan tindakan:\n//     1.\tMematuhi peraturan perundangan terkait jaminan produk halal\n// 2.\tMenggunakan bahan halal dan melaksanakan proses produk halal (PPH)\n// 3.\tMenyiapkan sumber daya manusia yang mendukung pelaksanaan PPH di perusahaan\n// 4.\tMensosialisasikan dan mengkomunikasikan kebijakan halal pada seluruh pihak terkait untuk memastikan semua personel menjaga integritas halal di perusahaan.\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames('blank-page', {\n        'dark-layout': skin === 'dark'\n      })}\n    >\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames('nav-item', {\n        disabled: item.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                const commonClass = 'd-flex align-items-center'\n                if (isActive && !item.disabled && item.navLink !== '#') {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item active`\n                  } else {\n                    return `${commonClass} nav-link active`\n                  }\n                } else {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item`\n                  } else {\n                    return `${commonClass} nav-link`\n                  }\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { usePopper } from 'react-popper'\nimport { useTranslation } from 'react-i18next'\n\n// ** Utils\nimport { hasActiveChild } from '@layouts/utils'\n\n// ** Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst applyHeight = {\n  enabled: true,\n  name: 'applyHeight',\n  phase: 'beforeWrite',\n  fn: data => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: 'auto'\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest('.dropdown').classList.add('openLeft')\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? 'bottom-end' : 'bottom-start'\n  const popperPlacementSubMenu = isRtl ? 'left-start' : 'right-start'\n\n  // ** Hooks\n  const { t } = useTranslation()\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: isChild ? popperPlacementSubMenu : popperPlacement,\n    modifiers: [\n      applyHeight,\n      {\n        enabled: true,\n        name: 'offset',\n        options: {\n          offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n        }\n      }\n    ]\n  })\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames('dropdown', {\n        show: menuOpen,\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active': hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to='/'\n        onClick={e => e.preventDefault()}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames('dropdown-menu', { 'first-level': submenu === false })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ menuData }) => {\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        container={false}\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? menu({ menuData, routerProps, currentActiveItem }) : <MenuComponent menuData={menuData} />}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          transition={transition}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setTransition={setTransition}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'secondPage',\n    title: 'Second Page',\n    icon: <Mail size={20} />,\n    navLink: '/second-page'\n  }\n]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/horizontal'\n\nconst HorizontalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  const transition = store.layout.routerTransition\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === 'horizontal' && !routeMeta) ||\n    (layoutStored.layout === 'horizontal' && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [routeMeta ? routeMeta.className : '']: routeMeta && routeMeta.className,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': routeMeta && !routeMeta.appLayout,\n          'content-area-wrapper': routeMeta && routeMeta.appLayout,\n          'container-xxl p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: 'content-body' } : {})}>{children}</Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Suspense } from 'react'\nimport { Navigate } from 'react-router-dom'\n\n// ** Utils\nimport { isUserLoggedIn, getHomeRouteForLoggedInUser } from '@utils'\nimport {NavItem} from \"reactstrap\";\n\nconst PublicRoute = ({ children, route }) => {\n  if (route) {\n    const user = isUserLoggedIn()\n\n    const restrictedRoute = route.meta && route.meta.restricted\n    console.log(user)\n\n    // if (user && restrictedRoute) {\n    //   return <Navigate to={getHomeRouteForLoggedInUser(user.role)} />\n    // }\n    if (user && restrictedRoute) {\n      return <Navigate to={'/error'} />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","// ** React Imports\nimport { Navigate } from 'react-router-dom'\nimport { useContext, Suspense } from 'react'\n\n// ** Context Imports\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { isUserLoggedIn, getHomeRouteForLoggedInUser } from '@utils'\nconst PrivateRoute = ({ children, route }) => {\n  // ** Hooks & Vars\n  const ability = useContext(AbilityContext)\n  const user = isUserLoggedIn()\n  // const user = JSON.parse(sessionStorage.getItem('token'))\n\n  if (route) {\n    let action = null\n    let resource = null\n    let restrictedRoute = false\n\n    console.log(user)\n\n    if (route.meta) {\n      action = route.meta.action\n      resource = route.meta.resource\n      restrictedRoute = route.meta.restricted\n    }\n    console.log(restrictedRoute)\n    if (!user) {\n      return <Navigate to='/login' />\n    }\n    if (user && restrictedRoute) {\n      return <Navigate to='/beranda' />\n    }\n    if (user && restrictedRoute && user.role === 'client') {\n      return <Navigate to='/access-control' />\n    }\n    // if (user && !ability.can(action || 'read', resource)) {\n    //   return <Navigate to='/misc/not-authorized' replace />\n    // }\n    // if (user && !ability.can(action || 'read', resource)) {\n    //   return <Navigate to='/' replace />\n    // }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n","import { lazy } from 'react'\r\n\r\nconst SJPHKuPage = lazy(() => import('../../views/pages/sjph/my_sjph/MySJPHPage'))\r\nconst CompanyProfilePage = lazy(() => import('../../views/pages/sjph/module_1/CompanyProfilePage'))\r\nconst KriteriaSistemJaminanProdukHalalPage = lazy(() => import('../../views/pages/sjph/module_2/KriteriaSistemJaminanProdukHalalPage'))\r\nconst KebijakanEdukasiHalalPage = lazy(() => import('../../views/pages/sjph/module_3/KebijakanEdukasiHalalPage'))\r\nconst BahanKepentinganHalalPage = lazy(() => import('../../views/pages/sjph/module_4/BahanKepentinganHalalPage'))\r\nconst KepentinganProduksiDistribusiProdukPage = lazy(() => import('../../views/pages/sjph/module_5/KepentinganProduksiDistribusiProdukPage'))\r\nconst KajiUlangManajemenPage = lazy(() => import('../../views/pages/sjph/module_6/KajiUlangManajemenPage'))\r\nconst PDFRenderer = lazy(() => import('../../views/export/sjph/PDFRenderer'))\r\n\r\n\r\nconst SJPHRoutes = [\r\n    {\r\n        path: '/sjph/sjph_ku',\r\n        element: <SJPHKuPage />,\r\n    },\r\n    {\r\n        path: '/sjph/informasi_umum_perusahaan',\r\n        element: <CompanyProfilePage />,\r\n    },\r\n    {\r\n        path: '/sjph/kriteria_sistem_jaminan_produk_halal',\r\n        element: <KriteriaSistemJaminanProdukHalalPage />\r\n    },\r\n    {\r\n        path: '/sjph/kebijakan_dan_edukasi_halal',\r\n        element: <KebijakanEdukasiHalalPage />\r\n    },\r\n    {\r\n        path: '/sjph/bahan_untuk_kepentingan_halal',\r\n        element: <BahanKepentinganHalalPage />\r\n    },\r\n    {\r\n        path: '/sjph/kepentingan_produksi_dan_distribusi_produk',\r\n        element: <KepentinganProduksiDistribusiProdukPage />\r\n    },\r\n    {\r\n        path: '/sjph/kaji_ulang_manajemen',\r\n        element: <KajiUlangManajemenPage />\r\n    },\r\n    {\r\n        path: '/sjph/export/PDF',\r\n        element: <PDFRenderer />,\r\n        meta: {\r\n            layout: 'blank'\r\n        }\r\n    }\r\n]\r\n\r\nexport default SJPHRoutes\r\n","// ** React Imports\r\nimport { lazy } from 'react'\r\nimport blankLayout from \"../../@core/layouts/BlankLayout\";\r\n\r\nconst Login = lazy(() => import('../../views/pages/authentication/Login'))\r\nconst Register = lazy(() => import('../../views/pages/authentication/Register'))\r\nconst ForgotPassword = lazy(() => import('../../views/pages/authentication/ForgotPassword'))\r\n\r\nconst AuthenticationRoutes = [\r\n    {\r\n        path: '/login',\r\n        element: <Login />,\r\n        meta: {\r\n            layout: 'blank',\r\n            publicRoute: true,\r\n            restricted: true\r\n        }\r\n    },\r\n    {\r\n        path: '/register',\r\n        element: <Register />,\r\n        meta: {\r\n            layout: 'blank',\r\n            publicRoute: true,\r\n            restricted: true\r\n        }\r\n    },\r\n    {\r\n        path: '/forgot-password',\r\n        element: <ForgotPassword />,\r\n        meta: {\r\n            layout: 'blank',\r\n            publicRoute: true,\r\n            restricted: true\r\n        }\r\n    },\r\n]\r\n\r\nexport default AuthenticationRoutes\r\n","// ** React Imports\nimport { Fragment, lazy } from 'react'\nimport { Navigate } from 'react-router-dom'\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\n\n// ** Route Components\nimport PublicRoute from '@components/routes/PublicRoute'\nimport PrivateRoute from '@components/routes/PrivateRoute'\n\n// ** Utils\nimport { isObjEmpty } from '@utils'\nimport {Circle, Menu} from \"react-feather\";\n\n// Route Imports\nimport SJPHRoutes from \"./SJPH\";\nimport AuthenticationRoutes from \"./Authentication\";\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = '%s - PasporUMKM'\n\n// ** Default Route\nconst DefaultRoute = '/login'\n\nconst Home = lazy(() => import('../../views/Home'))\nconst NotAuthorized = lazy(() => import('../../views/pages/misc/NotAuthorized'))\nconst Error = lazy(() => import('../../views/pages/misc/Error'))\nconst ComingSoon = lazy(() => import('../../views/pages/misc/ComingSoon'))\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: '/',\n    index: true,\n    element: <Navigate replace to={DefaultRoute} />\n    // element: <Login />\n  },\n  {\n    path: '/beranda',\n    element: <Home />,\n  },\n    ...SJPHRoutes,\n    ...AuthenticationRoutes,\n  {\n    path: '/*',\n    element: <Error />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/not_authorized',\n    element: <NotAuthorized />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/coming_soon',\n    element: <ComingSoon />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n]\n\nconst getRouteMeta = route => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta }\n    } else {\n      return {}\n    }\n  }\n}\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n\n  if (Routes) {\n    Routes.filter(route => {\n      let isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n          (route.meta && route.meta.layout && route.meta.layout === layout) ||\n          ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\n      ) {\n        let RouteTag = PrivateRoute\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\n        }\n        if (route.element) {\n          const Wrapper =\n              // eslint-disable-next-line multiline-ternary\n              isObjEmpty(route.element.props) && isBlank === false\n                  ? // eslint-disable-next-line multiline-ternary\n                  LayoutWrapper\n                  : Fragment\n\n          route.element = (\n              <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n                <RouteTag route={route}>{route.element}</RouteTag>\n              </Wrapper>\n          )\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route)\n      }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = layout => {\n  const defaultLayout = layout || 'vertical'\n  const layouts = ['vertical', 'horizontal', 'blank']\n\n  const AllRoutes = []\n\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: '/',\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Icons Imports\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\n// ** Utils\nimport { isUserLoggedIn, getHomeRouteForLoggedInUser } from '@utils'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Vars\n  const user = isUserLoggedIn()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item me-auto'>\n          <NavLink to={user ? '/beranda' : '/login'} className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return 'd-flex align-items-center active'\n                }\n              }\n            })}\n        onClick={e => {\n          if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\n            e.preventDefault()\n          }\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n  const { t } = useTranslation()\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active':\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport {\n  canViewMenuGroup,\n  canViewMenuItem,\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\n} from '@layouts/utils'\nimport {useState} from \"react\";\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n  const [isSJPH, setIsSJPH] = useState(false)\n\n  // ** Render Nav Menu Items\n  return props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return <TagName item={item} index={index} key={item.id} {...props} />\n      // return canViewMenuGroup(item) || <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    // return canViewMenuItem(item) || <TagName key={item.id || item.header} item={item} {...props} />\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        container={false}\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ skin, setSkin, setMenuVisibility })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          transition={transition}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setTransition={setTransition}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          menuCollapsed={menuCollapsed}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n          setMenuCollapsed={setMenuCollapsed}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\nimport {useEffect, useState} from \"react\";\n\n\nconst VerticalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport {Link, useNavigate} from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst logout = () => {\n  sessionStorage.clear();\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"sjph_id\");\n  localStorage.removeItem(\"sjph_id\");\n}\n\nconst UserDropdown = () => {\n  const navigate = useNavigate()\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name fw-bold'>{sessionStorage.username}</span>\n          <span className='user-status'>User</span>\n        </div>\n        <Avatar img={defaultAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu end>\n        <DropdownItem tag={Link} to='/coming_soon'>\n          <User size={14} className='me-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem tag={Link} to='/coming_soon' >\n          <Settings size={14} className='me-75' />\n          <span className='align-middle'>Settings</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login' onClick={logout}>\n          <Power size={14} className='me-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport UserDropdown from './UserDropdown'\n\nconst NavbarUser = () => {\n  return (\n    <ul className='nav navbar-nav align-items-center ms-auto'>\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <ul className='navbar-nav d-xl-none'>\n          <NavItem className='mobile-menu me-auto'>\n            <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n              <Menu className='ficon' />\n            </NavLink>\n          </NavItem>\n        </ul>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n"],"sourceRoot":""}