{"version":3,"sources":["utility/ApiRequest.js","utility/ApiConfig.js","@core/components/input-password-toggle/index.js","models/User.js","assets/images/pages/register-v2.svg","views/Register.js"],"names":["ApiRequest","set","endpoint","method","body","a","token","sessionStorage","localStorage","console","log","JSON","stringify","request","headers","Authorization","Accept","fetch","apiConfig","base_url","response","ok","json","error","msg","code","error_message","window","location","reload","setMultipart","module","exports","InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","User","getAll","getById","admin_id","deleteUser","updateUser","changePassword","register","login","email","password","Register","username","setUsername","setEmail","setPassword","confirmPassword","setConfirmPassword","userModel","UserModels","navigate","useNavigate","ToastDanger","color","icon","toast","dismiss","t","ToastEmpty","ToastEmail","source","require","default","submission","isEmail","result","success","swal","fire","then","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","xs","md","tag","onSubmit","onChange","target","value","autoFocus","required","href","block"],"mappings":"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","file":"static/js/10.c4f87a58.chunk.js","sourcesContent":["\r\nimport apiConfig from \"./ApiConfig\"\r\n\r\nexport default class ApiRequest {\r\n    static set = async (endpoint, method, body) => {\r\n\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        // console.log('API ACCESS: ' + token);\r\n        console.log('BODY', JSON.stringify(body))\r\n        const request = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                Accept: 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n            // body: \"afdadsf\"\r\n\r\n        }\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, request)\r\n\r\n        if (response.ok) {\r\n            return response.json()\r\n        }\r\n\r\n        const error = await response.json()\r\n        console.log(error)\r\n        console.log(error.msg)\r\n\r\n        if (error.code === 'JWT_EXPIRED' || error.code === 'NO_TOKEN_PROVIDED' || error.code === 'INVALID_TOKEN' || error.code === 'BAD_TOKEN_FORMAT' || error.code === 'NO_SECRET_DEFINED' || error.error_message === 'JWT_MALFORMED' || error.error_message?.msg === 'JWT_MALFORMED' || error.error_message === 'JWT_EXPIRED' || error.code === \"SUBSCRIPTION_EXPIRED\") {\r\n            delete sessionStorage.token\r\n            delete localStorage.token\r\n            // alert('Login timeout')\r\n            window.location.reload()\r\n            throw error\r\n        }\r\n\r\n        throw error\r\n    }\r\n\r\n    static setMultipart = async (endpoint, method, body) => {\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, {\r\n            method,\r\n            headers: {\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body\r\n            // body: \"afdadsf\"\r\n        })\r\n\r\n        if (response.ok) {\r\n            console.log(response)\r\n\r\n            return response.json()\r\n        } else {\r\n\r\n            const error = await response.json()\r\n\r\n            console.log(error)\r\n\r\n            throw error\r\n        }\r\n    }\r\n}\r\n","module.exports = {\r\n    base_url: 'https://api.pasporumkm.com'\r\n}","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","import ApiRequest from \"../utility/ApiRequest\"\r\n\r\nexport default class User {\r\n    static login = async (email, password) => {\r\n        return await ApiRequest.set('/ppkm/user/login', \"POST\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    getAll = async () => {\r\n        return await ApiRequest.set(\"/ppkm/users\", \"GET\")\r\n    }\r\n\r\n    getById = async (admin_id) => {\r\n        return await ApiRequest.set(`/ppkm/user/${admin_id}`, \"GET\")\r\n    }\r\n\r\n    deleteUser = async (id) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"DELETE\")\r\n    }\r\n\r\n    updateUser = async (id, body) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"PUT\", body)\r\n    }\r\n\r\n    changePassword = async (id, body) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"POST\", body)\r\n    }\r\n\r\n    register = async (body) => {\r\n        return await ApiRequest.set(`/ppkm/user/register`, 'POST', body)\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/register-v2.24c0a62e.svg\";","// ** React Imports\nimport {Link, useNavigate} from 'react-router-dom'\n\n// ** Custom Hooks\n// import { useSkin } from '@hooks/useSkin'\n\n// ** Icons Imports\nimport {Facebook, Twitter, Mail, GitHub, X} from 'react-feather'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\nimport swal from 'sweetalert2'\n\nimport * as yup from 'yup'\n\n// ** Reactstrap Imports\nimport {Row, Col, CardTitle, CardText, Form, Label, Input, Button, FormFeedback} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\nimport {useState} from \"react\"\nimport UserModels from '../models/User'\nimport {useForm} from \"react-hook-form\"\nimport {yupResolver} from \"@hookform/resolvers/yup\"\nimport Avatar from \"../@core/components/avatar\"\nimport {FaInfo} from \"react-icons/fa\"\nimport toast from \"react-hot-toast\"\nimport isEmail from \"validator/es/lib/isEmail\";\n\nconst Register = () => {\n  // ** Hooks\n  // const {skin} = useSkin()\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n  const userModel = new UserModels()\n  const navigate = useNavigate()\n\n  const ToastDanger = () =>{\n    return (\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='danger' icon={<FaInfo size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='d-flex justify-content-between'>\n              <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n            </div>\n            <span>Password tidak sama dengan konfirmasi password. Tolong coba lagi.</span>\n          </div>\n        </div>\n    )\n  }\n\n  const ToastEmpty = () =>{\n    return (\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='danger' icon={<FaInfo size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='d-flex justify-content-between'>\n              <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n            </div>\n            <span>Tolong isi kolom yang kosong.</span>\n          </div>\n        </div>\n    )\n  }\n\n  const ToastEmail = () =>{\n    return (\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='danger' icon={<FaInfo size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='d-flex justify-content-between'>\n              <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n            </div>\n            <span>Tolong isi kolom email dengan benar.</span>\n          </div>\n        </div>\n    )\n  }\n\n  // const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\n  //     source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const source = require(`@src/assets/images/pages/register-v2.svg`).default\n\n  const submission = async () => {\n\n    if (!username || !email || !password) {\n      toast(t =>(\n          <ToastEmpty t={t} />\n      ))\n    } else if (!isEmail(email)) {\n      toast(t =>(\n          <ToastEmail t={t} />\n      ))\n    } else {\n        if (password !== confirmPassword) {\n        toast(t =>(\n            <ToastDanger t={t} />\n        ))\n      } else {\n            const body = {\n              username,\n              email,\n              password\n            }\n\n            try {\n              const result = await userModel.register(body)\n              if ((result.id) || (result.success)) {\n                await swal.fire('', \"Data berhasil di simpan\", 'success')\n                    .then(() => {\n                      navigate('/login')\n                    })\n              } else {\n                await swal.fire('', \"Data gagal disimpan\", 'error')\n              }\n            } catch (e) {\n              console.error(e)\n              await swal.fire('Error', e.error_message ? e.error_message : \"Terjadi Error! Mohon kontak admin. \", \"error\")\n            }\n          }\n        }\n  }\n\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>PasporUMKM</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' xs='12' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='fw-bold mb-1'>\n              Perjalananmu dimulai dari sini 🚀\n            </CardTitle>\n            <CardText className='mb-2'>Membuat proses sertifikasi menjadi menyenangkan!</CardText>\n            <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <Input type='text' id='register-username' placeholder='username' onChange={(e) => { setUsername(e.target.value) }} autoFocus required />\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <Input type='email' id='register-email' onChange={(e) => { setEmail(e.target.value) }} placeholder='email (contoh@email.com)' required/>\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <InputPasswordToggle className='input-group-merge' id='register-password' onChange={(e) => { setPassword(e.target.value) }}/>\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-password'>\n                  Ketik Ulang Password\n                </Label>\n                <InputPasswordToggle className='input-group-merge' id='confirm-password' onChange={(e) => { setConfirmPassword(e.target.value) }}/>\n              </div>\n              <div className='form-check mb-1'>\n                <Input type='checkbox' id='terms' />\n                <Label className='form-check-label' for='terms'>\n                  Saya mengerti\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\n                    tentang kebijakan dan ketentuan.\n                  </a>\n                </Label>\n              </div>\n              <Button onClick={() => {\n                submission()\n              }} color='primary' block>\n                Sign up\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>Sudah punya akun?</span>\n              <Link to='/login'>\n                <span>Sign in disini</span>\n              </Link>\n            </p>\n            {/*<div className='divider my-2'>*/}\n            {/*  <div className='divider-text'>or</div>*/}\n            {/*</div>*/}\n            {/*<div className='auth-footer-btn d-flex justify-content-center'>*/}\n            {/*  <Button color='facebook'>*/}\n            {/*    <Facebook size={14} />*/}\n            {/*  </Button>*/}\n            {/*  <Button color='twitter'>*/}\n            {/*    <Twitter size={14} />*/}\n            {/*  </Button>*/}\n            {/*  <Button color='google'>*/}\n            {/*    <Mail size={14} />*/}\n            {/*  </Button>*/}\n            {/*  <Button className='me-0' color='github'>*/}\n            {/*    <GitHub size={14} />*/}\n            {/*  </Button>*/}\n            {/*</div>*/}\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Register\n"],"sourceRoot":""}