{"version":3,"sources":["models/SJPHKu.js","views/tables/sjph/my_sjph/MySJPHTable.js","views/pages/sjph/my_sjph/MySJPHPage.js"],"names":["SJPHKu","getAll","a","ApiRequest","set","getNamaPerusahaan","id","createSJPH","body","deleteSJPH","defaultValues","firstName","lastName","username","MySJPHTable","useState","sjphName","setSJPHName","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","sjph","setSJPH","sjphModel","SJPHModels","useNavigate","show","setShow","useForm","errors","control","setError","handleSubmit","formState","getSJPH","result","console","error","useEffect","submit","nama_sjph","success","swal","fire","then","error_message","title","text","icon","showCancelButton","confirmButton","cancelButton","customClass","buttonsStyling","res","isConfirmed","Swal","selectSJPH","name","sessionStorage","sjph_id","toast","e","BootstrapCheckbox","forwardRef","props","ref","className","type","columns","selector","row","sortable","created_at","modified_at","cell","color","onClick","allowOverflow","tag","size","end","href","preventDefault","isOpen","toggle","xs","for","placeholder","value","onChange","target","invalid","outline","caret","md","sm","bsSize","updatedData","length","filter","item","startsWith","toLowerCase","includes","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","Math","ceil","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","data","selectableRowsComponent","MySJPHPage"],"mappings":"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","file":"static/js/21.b28e41ca.chunk.js","sourcesContent":["import ApiRequest from \"../utility/ApiRequest\"\n\nexport default class SJPHKu {\n    getAll = async () => {\n        return await ApiRequest.set(\"/sjph\", \"GET\")\n    }\n\n    getNamaPerusahaan = async (id) => {\n        return await ApiRequest.set(`/sjph/nama_perusahaan/${id}`, \"GET\")\n    }\n\n    createSJPH = async (body) => {\n        return await ApiRequest.set(`/sjph`, 'POST', body)\n    }\n\n    deleteSJPH = async (id) => {\n        return await ApiRequest.set(`/sjph/${id}`, 'DELETE')\n    }\n\n}\n","// ** Reactstrap Imports\nimport {\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    UncontrolledDropdown,\n    Badge,\n    Table,\n    Col,\n    Button,\n    ModalHeader,\n    ModalBody,\n    Row, Label, Input, FormFeedback, Modal, CardHeader, CardTitle, Card, CardBody, UncontrolledButtonDropdown\n} from 'reactstrap'\nimport '@styles/react/libs/editor/editor.scss'\nimport {useState, Fragment, forwardRef, useEffect} from \"react\";\nimport SJPHModels from \"../../../../models/SJPHKu\";\nimport swal from 'sweetalert2'\nimport {useNavigate} from \"react-router-dom\";\nimport {\n    Archive,\n    ChevronDown,\n    Copy,\n    Edit,\n    File,\n    FileText,\n    MoreVertical,\n    Printer,\n    Share,\n    Trash,\n    Grid, Plus\n} from \"react-feather\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport Select from \"react-select\";\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Swal from \"sweetalert2\";\nimport toast from \"react-hot-toast\";\n\nconst defaultValues = {\n    firstName: 'Bob',\n    lastName: 'Barton',\n    username: 'bob.dev'\n}\n\nconst MySJPHTable = () => {\n\n    const [sjphName, setSJPHName] = useState(\"\")\n    const [currentPage, setCurrentPage] = useState(0)\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n    const [details, setDetails] = useState([])\n    const [sjph, setSJPH] = useState([])\n\n\n    const sjphModel = new SJPHModels()\n\n    const navigate = useNavigate()\n\n    // ** States\n    const [show, setShow] = useState(false)\n\n    // ** Hooks\n    const {\n        control,\n        setError,\n        handleSubmit,\n        formState: { errors }\n    } = useForm({ defaultValues })\n\n    const getSJPH = async () => {\n        try {\n            const result = await sjphModel.getAll()\n            setSJPH(result)\n\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(()=>{\n            getSJPH()\n    },[])\n\n\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n\n    const handleFilter = e => {\n        const value = e.target.value\n        let updatedData = []\n        setSearchValue(value)\n\n        const status = {\n            1: { title: 'Current', color: 'light-primary' },\n            2: { title: 'Professional', color: 'light-success' },\n            3: { title: 'Rejected', color: 'light-danger' },\n            4: { title: 'Resigned', color: 'light-warning' },\n            5: { title: 'Applied', color: 'light-info' }\n        }\n\n        if (value.length) {\n            updatedData = sjph.filter(item => {\n                const startsWith =\n                    item.nama_sjph.toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.created_at.toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.modified_at.toLowerCase().startsWith(value.toLowerCase())\n\n                const includes =\n                    item.nama_sjph.toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.created_at.toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.modified_at.toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWith) {\n                    return startsWith\n                } else if (!startsWith && includes) {\n                    return includes\n                } else return null\n            })\n            setFilteredData(updatedData)\n            setSearchValue(value)\n        }\n    }\n\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(sjph.length / 7) || 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            nextLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            breakLinkClassName='page-link'\n            previousLinkClassName='page-link'\n            nextClassName='page-item next-item'\n            previousClassName='page-item prev-item'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\n        />\n    )\n\n    const onSubmitModal = data => {\n        if (Object.values(data).every(field => field.length > 0)) {\n            return null\n        } else {\n            for (const key in data) {\n                if (data[key].length === 0) {\n                    setError(key, {\n                        type: 'manual'\n                    })\n                }\n            }\n        }\n    }\n\n\n    const submit = async () => {\n        const body = {\n            nama_sjph: sjphName\n        }\n        try {\n            const result = await sjphModel.createSJPH(body)\n            if ((result.id)||(result.success)) {\n                await swal.fire('','Data berhasil di simpan','success')\n                    .then(()=>{\n                        getSJPH()\n                        setShow(false)\n                    })\n            } else {\n                await swal.fire('','Data gagal disimpan', 'error')\n            }\n        } catch (e) {\n            console.error(e)\n            await swal.fire('Error', e.error_message ? e.error_message : \"Terjadi Error! Mohon kontak admin.\")\n        }\n    }\n\n    const deleteSJPH = async (id) => {\n        swal.fire({\n            title: \"Peringatan!\",\n            text: \"Apakah kamu yakin ingin menghapus data ini?\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButton: \"Iya, tentu saja\",\n            cancelButton: \"Tidak\",\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ms-1'\n            },\n            buttonsStyling: false\n            // dangerMode: true,\n        }).then(async (res) => {\n            if (res.isConfirmed) {\n                try {\n                    const result = await sjphModel.deleteSJPH(id);\n\n                    if (result.id || result.success) {\n                        await Swal.fire({\n                            icon: \"success\",\n                            title: \"Sukses menghapus!\",\n                            text: 'Data kamu telah dihapus.',\n                            customClass: {\n                                confirmButton: 'btn btn-success'\n                            }\n                        }).then(()=>{\n                            getSJPH()\n                        })\n                    } else {\n                        await Swal.fire({\n                            title: 'Failed',\n                            text: 'Failed to delete',\n                            icon: 'error',\n                            customClass: {\n                                confirmButton: 'btn btn-success'\n                        }})\n                    }\n                } catch (e) {\n                    console.error(e)\n                    await Swal.fire('', e.error_message ? e.error_message : \"Something Wrong\", 'error')\n                }\n            }\n        })\n    }\n\n    const selectSJPH = async (id,name) =>{\n        try {\n            sessionStorage.sjph_id = id\n            toast.success(`Anda telah memilih SJPH ${name}`)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const BootstrapCheckbox = forwardRef((props, ref) => (\n        <div className='form-check'>\n            <Input type='checkbox' ref={ref} {...props} />\n        </div>\n    ))\n\n    const columns = [\n        {\n            name: 'ID',\n            // minWidth: '150px',\n            selector: row => row.sjph_id,\n            sortable: row => row.sjph_id\n        },\n        {\n            name: 'Nama SJPH',\n            sortable: true,\n            // minWidth: '150px',\n            selector: row => row.nama_sjph\n        },\n        {\n            name: 'Dibuat pada',\n            sortable: true,\n            // minWidth: '150px',\n            selector: row => row.created_at\n        },\n\n        {\n            name: 'Diubah pada',\n            sortable: true,\n            // minWidth: '150px',\n            selector: row => row.modified_at\n        },\n        {\n            name:  'Pilihan',\n            cell:  (row) => {\n                return (\n                    <Button className='me-1' color='primary' onClick={()=>{ selectSJPH(row.sjph_id,row.nama_sjph) }}>\n                        Pilih\n                    </Button>\n                )\n            }\n        },\n        {\n            name: 'Tindakan',\n            allowOverflow: false,\n            cell: (row) => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pe-1' tag='span' >\n                                <MoreVertical size={15} />\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n                                    <FileText size={15} />\n                                    <span className='align-middle ms-50'>Details</span>\n                                </DropdownItem>\n                                <DropdownItem className='w-100' onClick={()=>{ deleteSJPH(row.sjph_id) }}>\n                                    <Trash size={15} />\n                                    <span className='align-middle ms-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Edit size={15} />\n                    </div>\n                )\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n            <Modal isOpen={show} toggle={() => setShow(!show)} className='modal-dialog-centered modal-lg'>\n                <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\n                <ModalBody className='px-sm-5 mx-50 pb-5'>\n                    <div className='text-center mb-2'>\n                        <h1 className='mb-1'>Tambah Data Tabel</h1>\n                        <p>Tambah data tabelmu sekarang</p>\n                    </div>\n                    <Row tag='form' className='gy-1 pt-75'>\n                        <Col xs={12}>\n                            <Label className='form-label' for='sjphName'>\n                                SJPH Name\n                            </Label>\n                            <Input id='sjphName' placeholder='SJPH Tahun 2022' value={sjphName} onChange={(e)=> setSJPHName(e.target.value)} invalid={errors.sjphName && true} />\n                        </Col>\n                        <Col xs={12} className='text-center mt-2 pt-50'>\n                            <Button onClick={submit} className='me-1' color='primary'>\n                                Submit\n                            </Button>\n                            <Button type='reset' color='secondary' outline onClick={() => setShow(false)}>\n                                Discard\n                            </Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n            <Card>\n                <CardHeader>\n                    <CardTitle> SJPH-Ku </CardTitle>\n                    <div className='d-flex mt-md-0 mt-1'>\n                        <UncontrolledButtonDropdown>\n                            <DropdownToggle color='secondary' caret outline>\n                                <Share size={15} />\n                                <span className='align-middle ms-50'>Export</span>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem className='w-100'>\n                                    <Printer size={15} />\n                                    <span className='align-middle ms-50'>Print</span>\n                                </DropdownItem>\n                                <DropdownItem className='w-100' onClick={(e) => e.preventDefault()}>\n                                    <File size={15} />\n                                    <span className='align-middle ms-50'>PDF</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledButtonDropdown>\n                        <Button className='ms-2' color='primary' onClick={()=> setShow(true)}>\n                            <Plus size={15} />\n                            <span className='align-middle ms-50'>Add Record</span>\n                        </Button>\n                    </div>\n                </CardHeader>\n                <CardBody>\n            <div className='content-header'>\n                <h3 className='mb-0'>Daftar SJPH</h3>\n                <small className='text-muted'>Berikut adalah tabel daftar SJPH yang dibuat oleh kamu</small>\n            </div>\n                    <Row className='justify-content-end mx-0'>\n                        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                            <Label className='me-1' for='search-input'>\n                                Search\n                            </Label>\n                            <Input\n                                className='dataTable-filter mb-50'\n                                type='text'\n                                bsSize='sm'\n                                id='search-input'\n                                value={searchValue}\n                                onChange={handleFilter}\n                            />\n                        </Col>\n                    </Row>\n            <div className='react-dataTable'>\n                <DataTable\n                    noHeader\n                    pagination\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10} />}\n                    paginationDefaultPage={currentPage + 1}\n                    paginationComponent={CustomPagination}\n                    data={searchValue.length ? filteredData : sjph}\n                    selectableRowsComponent={BootstrapCheckbox}\n                />\n            </div>\n            &nbsp;\n            <Col sm='12'>\n                <div className='d-flex justify-content-end'>\n                    <Button className='me-1' color='primary' onClick={()=> setShow(true)}>\n                        Tambah\n                    </Button>\n                </div>\n            </Col>\n                </CardBody>\n        </Card>\n        </Fragment>\n    )\n\n}\nexport default MySJPHTable\n","import {Card, CardHeader, CardBody, CardTitle, CardText, Progress} from 'reactstrap'\nimport MySJPHTable from \"../../../tables/sjph/my_sjph/MySJPHTable\";\n\nconst MySJPHPage = () => {\n\n    return (\n      <div>\n          <MySJPHTable />\n      </div>\n    )\n}\n\nexport default MySJPHPage\n"],"sourceRoot":""}