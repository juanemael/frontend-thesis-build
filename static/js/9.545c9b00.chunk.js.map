{"version":3,"sources":["@core/components/input-password-toggle/index.js","utility/ApiConfig.js","utility/ApiRequest.js","models/User.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","redux/authentication.js","views/authentication/Login.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","module","exports","base_url","ApiRequest","set","endpoint","method","body","a","token","sessionStorage","localStorage","console","log","JSON","stringify","request","headers","Authorization","Accept","fetch","apiConfig","response","ok","json","error","msg","code","error_message","window","location","reload","setMultipart","User","getAll","getById","admin_id","deleteUser","updateUser","changePassword","register","login","username","password","email","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","use","config","accessToken","getToken","Promise","reject","originalRequest","status","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","push","getItem","value","setItem","args","post","getRefreshToken","jwt","useJwt","authSlice","createSlice","name","initialState","userData","item","parse","initialUser","reducers","handleLogin","state","action","payload","handleLogout","removeItem","actions","defaultValues","loginEmail","ToastContent","t","role","color","icon","toast","dismiss","ToastDanger","close","Login","skin","useSkin","navigate","useDispatch","useNavigate","useContext","AbilityContext","useForm","control","errors","setError","handleSubmit","formState","illustration","source","require","default","submitLogin","result","UserModels","e","to","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","top","right","target","placement","render","field","autoFocus","block"],"mappings":"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","file":"static/js/9.545c9b00.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","module.exports = {\r\n    base_url: 'https://api.pasporumkm.com/'\r\n}","\r\nimport apiConfig from \"./ApiConfig\"\r\n\r\nexport default class ApiRequest {\r\n    static set = async (endpoint, method, body) => {\r\n\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        // console.log('API ACCESS: ' + token);\r\n        console.log('BODY', JSON.stringify(body))\r\n        const request = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                Accept: 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n            // body: \"afdadsf\"\r\n\r\n        }\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, request)\r\n\r\n        if (response.ok) {\r\n            return response.json()\r\n        }\r\n\r\n        const error = await response.json()\r\n        console.log(error)\r\n        console.log(error.msg)\r\n\r\n        if (error.code === 'JWT_EXPIRED' || error.code === 'NO_TOKEN_PROVIDED' || error.code === 'INVALID_TOKEN' || error.code === 'BAD_TOKEN_FORMAT' || error.code === 'NO_SECRET_DEFINED' || error.error_message === 'JWT_MALFORMED' || error.error_message?.msg === 'JWT_MALFORMED' || error.error_message === 'JWT_EXPIRED' || error.code === \"SUBSCRIPTION_EXPIRED\") {\r\n            delete sessionStorage.token\r\n            delete localStorage.token\r\n            // alert('Login timeout')\r\n            window.location.reload()\r\n            throw error\r\n        }\r\n\r\n        throw error\r\n    }\r\n\r\n    static setMultipart = async (endpoint, method, body) => {\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, {\r\n            method,\r\n            headers: {\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body\r\n            // body: \"afdadsf\"\r\n        })\r\n\r\n        if (response.ok) {\r\n            console.log(response)\r\n\r\n            return response.json()\r\n        } else {\r\n\r\n            const error = await response.json()\r\n\r\n            console.log(error)\r\n\r\n            throw error\r\n        }\r\n    }\r\n}\r\n","import ApiRequest from \"../utility/ApiRequest\"\r\n\r\nexport default class User {\r\n    static login = async (username, password) => {\r\n        return await ApiRequest.set('/ppkm/user/login', \"POST\", {\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    getAll = async () => {\r\n        return await ApiRequest.set(\"/ppkm/users\", \"GET\")\r\n    }\r\n\r\n    getById = async (admin_id) => {\r\n        return await ApiRequest.set(`/ppkm/user/${admin_id}`, \"GET\")\r\n    }\r\n\r\n    deleteUser = async (id) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"DELETE\")\r\n    }\r\n\r\n    updateUser = async (id, body) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"PUT\", body)\r\n    }\r\n\r\n    changePassword = async (id, body) => {\r\n        return await ApiRequest.set(`/ppkm/user/${id}`, \"POST\", body)\r\n    }\r\n\r\n    register = async (body) => {\r\n        return await ApiRequest.set(`/ppkm/user/register`, 'POST', body)\r\n    }\r\n\r\n}\r\n","// ** Auth Endpoints\nexport default {\n  loginEndpoint: '/jwt/login',\n  registerEndpoint: '/jwt/register',\n  refreshEndpoint: '/jwt/refresh-token',\n  logoutEndpoint: '/jwt/logout',\n\n  // ** This will be prefixed in authorization header with token\n  // ? e.g. Authorization: Bearer <token>\n  tokenType: 'Bearer',\n\n  // ** Value of this property will be used as key to store JWT token in storage\n  storageTokenKeyName: 'accessToken',\n  storageRefreshTokenKeyName: 'refreshToken'\n}\n","import axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // ** jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // ** For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // ** For Refreshing Token\n  subscribers = []\n\n  constructor(jwtOverrideConfig) {\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // ** Request Interceptor\n    axios.interceptors.request.use(\n      config => {\n        // ** Get token from localStorage\n        const accessToken = this.getToken()\n\n        // ** If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // ** eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error)\n    )\n\n    // ** Add request/response interceptor\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        // ** const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // ** if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // ** Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // ** Make sure to assign accessToken according to your response.\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\n              // ** Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axios(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return axios.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken()\n    })\n  }\n}\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\nimport JwtService from './jwtService'\n\n// ** Export Service as useJwt\nexport default function useJwt(jwtOverrideConfig) {\n  const jwt = new JwtService(jwtOverrideConfig)\n\n  return {\n    jwt\n  }\n}\n","// ** Redux Imports\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\n// ** UseJWT import to get config\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\nconst config = useJwt.jwtConfig\r\n\r\nconst initialUser = () => {\r\n    const item = window.localStorage.getItem('userData')\r\n    //** Parse stored json or if none return initialValue\r\n    return item ? JSON.parse(item) : {}\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: {\r\n        userData: initialUser()\r\n    },\r\n    reducers: {\r\n        handleLogin: (state, action) => {\r\n            state.userData = action.payload\r\n            state[config.storageTokenKeyName] = action.payload[config.storageTokenKeyName]\r\n            state[config.storageRefreshTokenKeyName] = action.payload[config.storageRefreshTokenKeyName]\r\n            localStorage.setItem('userData', JSON.stringify(action.payload))\r\n            localStorage.setItem(config.storageTokenKeyName, JSON.stringify(action.payload.accessToken))\r\n            localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(action.payload.refreshToken))\r\n        },\r\n        handleLogout: state => {\r\n            state.userData = {}\r\n            state[config.storageTokenKeyName] = null\r\n            state[config.storageRefreshTokenKeyName] = null\r\n            // ** Remove user, accessToken & refreshToken from localStorage\r\n            localStorage.removeItem('userData')\r\n            localStorage.removeItem(config.storageTokenKeyName)\r\n            localStorage.removeItem(config.storageRefreshTokenKeyName)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { handleLogin, handleLogout } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import { useSkin } from '@hooks/useSkin'\nimport {Link, useNavigate} from 'react-router-dom'\nimport {Facebook, Twitter, Mail, GitHub, Coffee, X, HelpCircle} from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport {\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Label,\n  Input,\n  Button,\n  UncontrolledTooltip,\n  Alert,\n  Toast,\n  ToastHeader, ToastBody\n} from 'reactstrap'\nimport '@styles/react/pages/page-authentication.scss'\nimport {useDispatch} from \"react-redux\"\nimport {AbilityContext} from \"@src/utility/context/Can\"\nimport {useContext, useState} from \"react\"\nimport Avatar from \"../../@core/components/avatar\"\nimport toast from \"react-hot-toast\"\nimport {getHomeRouteForLoggedInUser} from \"@utils\"\nimport useJwt from '@src/auth/jwt/useJwt'\nimport {useForm, Controller} from \"react-hook-form\"\nimport { handleLogin } from '@store/authentication'\nimport UserModels from '../../models/User'\n\nconst defaultValues = {\n  password: 'admin',\n  loginEmail: 'admin@demo.com'\n}\n\nconst ToastContent = ({ t, name, role }) => {\n  return (\n      <div className='d-flex'>\n        <div className='me-1'>\n          <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        </div>\n        <div className='d-flex flex-column'>\n          <div className='d-flex justify-content-between'>\n            <h6>{name}</h6>\n            <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n          </div>\n          <span>You have successfully logged in as an {role} user to PasporUMKM. Now you can start to explore. Enjoy!</span>\n        </div>\n      </div>\n  )\n}\n\nconst ToastDanger = () =>{\n  return (\n      <Toast>\n        <ToastHeader close={close}>Vuexy</ToastHeader>\n        <ToastBody>\n          This is a toast on a danger background — check it out!\n        </ToastBody>\n      </Toast>\n)\n}\n\nconst Login = () => {\n  const { skin } = useSkin()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const ability = useContext(AbilityContext)\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n      source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const submitLogin = async () => {\n    try {\n      const result = UserModels.login(email,password)\n\n      if (result.token) {\n        localStorage.token = result.token\n        localStorage.email = result.email\n        // localStorage.role = result.role\n        sessionStorage.token = result.token\n        sessionStorage.username = result.username\n        sessionStorage.id = result.id\n\n        toast(t =>(\n              <ToastContent t={t} role={'user'} name={result.email || 'Unknown'} />\n        ))\n\n        navigate('/')\n      } else {\n        toast(\n            <ToastDanger/>\n        )\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      useJwt\n          .login({ email: data.loginEmail, password: data.password })\n          .then(res => {\n            const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\n            dispatch(handleLogin(data))\n            ability.update(res.data.userData.ability)\n\n            navigate(getHomeRouteForLoggedInUser(data.role))\n            toast(t => (\n                <ToastContent t={t} role={data.role || 'admin'} name={data.fullName || data.username || 'John Doe'} />\n            ))\n          })\n          .catch(err => console.log(err))\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>PasporUMKM</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='fw-bold mb-1'>\n              Welcome to PasporUMKM! 👋\n            </CardTitle>\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n            <Alert color='primary'>\n              <div className='alert-body font-small-2'>\n                <p>\n                  <small className='me-50'>\n                    <span className='fw-bold'>Admin:</span> admin@demo.com | admin\n                  </small>\n                </p>\n                <p>\n                  <small className='me-50'>\n                    <span className='fw-bold'>Client:</span> client@demo.com | client\n                  </small>\n                </p>\n              </div>\n              <HelpCircle\n                  id='login-tip'\n                  className='position-absolute'\n                  size={18}\n                  style={{ top: '10px', right: '10px' }}\n              />\n              <UncontrolledTooltip target='login-tip' placement='left'>\n                This is just for ACL demo purpose.\n              </UncontrolledTooltip>\n            </Alert>\n            <Form className='auth-login-form mt-2'>\n              <div className='mb-1'>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Controller\n                id='loginEmail'\n                name='loginEmail'\n                control={control}\n                render={({field}) => (\n                  <Input type='email' placeholder='john@example.com' invalid={errors.loginEmail && true} autoFocus {...field}/>\n                )}/>\n              </div>\n              <div className='mb-1'>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/forgot-password'>\n                    <small>Forgot Password?</small>\n                  </Link>\n                </div>\n                <Controller\n                    id='password'\n                    name='password'\n                    control={control}\n                    render={({field}) => (\n                        <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field}/>\n                    )}\n                />\n              </div>\n              <div className='form-check mb-1'>\n                <Input type='checkbox' id='remember-me' />\n                <Label className='form-check-label' for='remember-me'>\n                  Remember Me\n                </Label>\n              </div>\n              {/*<Button tag={Link} to='/' color='primary' block>*/}\n              <Button color='primary' onClick={submitLogin} block>\n                Sign in\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>New on our platform?</span>\n              <Link to='/register'>\n                <span>Create an account</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button color='facebook'>\n                <Facebook size={14} />\n              </Button>\n              <Button color='twitter'>\n                <Twitter size={14} />\n              </Button>\n              <Button color='google'>\n                <Mail size={14} />\n              </Button>\n              <Button className='me-0' color='github'>\n                <GitHub size={14} />\n              </Button>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}