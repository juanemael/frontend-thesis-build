{"version":3,"sources":["models/SJPHKu.js","views/tables/sjph/my_sjph/MySJPHTable.js","views/pages/sjph/my_sjph/MySJPHPage.js","utility/ApiRequest.js","utility/ApiConfig.js"],"names":["SJPHKu","getAllByUserID","user_id","a","ApiRequest","set","sessionStorage","getNamaPerusahaan","id","createSJPH","body","deleteSJPH","MySJPHTable","useState","sjphName","setSJPHName","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","sjph","setSJPH","disable","setDisable","sjphModel","SJPHModels","navigate","useNavigate","show","setShow","useForm","errors","control","setError","handleSubmit","formState","getSJPH","result","console","error","useEffect","backBtnClass","nextBtnClass","instance","steps","title","text","attachTo","element","on","cancelIcon","enabled","buttons","classes","action","back","next","cancel","submit","nama_sjph","success","swal","fire","then","error_message","icon","showCancelButton","confirmButton","cancelButton","customClass","buttonsStyling","res","isConfirmed","Swal","reload","window","location","selectSJPH","perusahaan_id","name","sjph_id","setTimeout","toast","BootstrapCheckbox","forwardRef","props","ref","className","type","columns","selector","row","sortable","created_at","modified_at","cell","disabled","color","onClick","allowOverflow","tag","size","end","href","e","preventDefault","Content","tour","useContext","ShepherdTourContext","start","tourOptions","useModalOverlay","isOpen","toggle","xs","for","placeholder","value","onChange","target","invalid","outline","caret","md","sm","bsSize","updatedData","length","filter","item","startsWith","toLowerCase","includes","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","Math","ceil","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","data","selectableRowsComponent","MySJPHPage","endpoint","method","token","localStorage","log","JSON","stringify","request","headers","Authorization","Accept","fetch","apiConfig","base_url","response","ok","json","msg","code","setMultipart","module","exports"],"mappings":"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","file":"static/js/19.7deab968.chunk.js","sourcesContent":["import ApiRequest from \"../utility/ApiRequest\"\r\n\r\nexport default class SJPHKu {\r\n    getAllByUserID = async (user_id) => {\r\n        return await ApiRequest.set(`/sjph/user/${sessionStorage.user_id}`, \"GET\")\r\n    }\r\n\r\n    getNamaPerusahaan = async (id) => {\r\n        return await ApiRequest.set(`/sjph/nama_perusahaan/${id}`, \"GET\")\r\n    }\r\n\r\n    createSJPH = async (body) => {\r\n        return await ApiRequest.set(`/sjph`, 'POST', body)\r\n    }\r\n\r\n    deleteSJPH = async (id) => {\r\n        return await ApiRequest.set(`/sjph/${id}`, 'DELETE')\r\n    }\r\n\r\n}\r\n","// ** Reactstrap Imports\r\nimport {\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    UncontrolledDropdown,\r\n    Badge,\r\n    Table,\r\n    Col,\r\n    Button,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Row, Label, Input, FormFeedback, Modal, CardHeader, CardTitle, Card, CardBody, UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\nimport '@styles/react/libs/editor/editor.scss'\r\nimport {useState, Fragment, forwardRef, useEffect, useContext} from \"react\";\r\nimport SJPHModels from \"../../../../models/SJPHKu\";\r\nimport swal from 'sweetalert2'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    Archive,\r\n    ChevronDown,\r\n    Copy,\r\n    Edit,\r\n    File,\r\n    FileText,\r\n    MoreVertical,\r\n    Printer,\r\n    Share,\r\n    Trash,\r\n    Grid, Plus\r\n} from \"react-feather\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport 'shepherd.js/dist/css/shepherd.css'\r\nimport '@styles/react/libs/shepherd-tour/shepherd-tour.scss'\r\nimport Swal from \"sweetalert2\";\r\nimport toast from \"react-hot-toast\";\r\nimport {ShepherdTour, ShepherdTourContext} from \"react-shepherd\";\r\nimport navigation from '@src/navigation/vertical'\r\nimport ReactDOM from \"react-dom\";\r\n// import VerticalLayout from \"../../../../layouts/VerticalLayout\";\r\nimport VerticalLayout from \"../../../../layouts/VerticalLayout\";\r\n\r\nconst MySJPHTable = () => {\r\n\r\n    const [sjphName, setSJPHName] = useState(\"\")\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const [details, setDetails] = useState([])\r\n    const [sjph, setSJPH] = useState([])\r\n    const [disable, setDisable] = useState(false)\r\n\r\n\r\n    const sjphModel = new SJPHModels()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // ** States\r\n    const [show, setShow] = useState(false)\r\n\r\n    // ** Hooks\r\n    const {\r\n        control,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm()\r\n\r\n    const getSJPH = async () => {\r\n        try {\r\n            const result = await sjphModel.getAllByUserID()\r\n            setSJPH(result)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n            getSJPH()\r\n    },[])\r\n\r\n    const backBtnClass = 'btn btn-sm btn-outline-primary',\r\n        nextBtnClass = 'btn btn-sm btn-primary btn-next'\r\n\r\n    let instance = null\r\n\r\n    const steps = [\r\n        {\r\n            id: 'tambahData',\r\n            title: 'Tambah SJPH',\r\n            text: 'Klik tombol ini untuk membuat SJPH terlebih dahulu',\r\n            attachTo: { element: '#buttonTambah', on: 'top' },\r\n            cancelIcon: {\r\n                enabled: true\r\n            },\r\n            buttons: [\r\n                {\r\n                    text: 'Kembali',\r\n                    classes: backBtnClass,\r\n                    action: () => instance.back()\r\n                },\r\n                {\r\n                    text: 'Selanjutnya',\r\n                    classes: nextBtnClass,\r\n                    action: () => instance.next()\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'dataTable',\r\n            title: 'Data Table',\r\n            text: 'Ini table SJPH-Mu setelah membuat SJPH, klik tombol pilih di SJPH yang anda ingin isi.',\r\n            attachTo: { element: '#dataTable', on: 'bottom' },\r\n            cancelIcon: {\r\n                enabled: true\r\n            },\r\n            buttons: [\r\n                {\r\n                    action: () => instance.cancel(),\r\n                    classes: backBtnClass,\r\n                    text: 'Lewati'\r\n                },\r\n                {\r\n                    text: 'Selanjutnya',\r\n                    classes: nextBtnClass,\r\n                    action: () => instance.next()\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'card',\r\n            title: 'Tur Selesai',\r\n            text: 'Tur Selesai. Semoga Berhasil!',\r\n            attachTo: { element: '', on: 'top' },\r\n            cancelIcon: {\r\n                enabled: true\r\n            },\r\n            buttons: [\r\n                {\r\n                    text: 'Kembali',\r\n                    classes: backBtnClass,\r\n                    action: () => instance.back()\r\n                },\r\n                {\r\n                    text: 'Selesai',\r\n                    classes: nextBtnClass,\r\n                    action: () => instance.cancel()\r\n                }\r\n            ]\r\n        },\r\n    ]\r\n\r\n\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n\r\n    const handleFilter = e => {\r\n        const value = e.target.value\r\n        let updatedData = []\r\n        setSearchValue(value)\r\n\r\n        const status = {\r\n            1: { title: 'Current', color: 'light-primary' },\r\n            2: { title: 'Professional', color: 'light-success' },\r\n            3: { title: 'Rejected', color: 'light-danger' },\r\n            4: { title: 'Resigned', color: 'light-warning' },\r\n            5: { title: 'Applied', color: 'light-info' }\r\n        }\r\n\r\n        if (value.length) {\r\n            updatedData = sjph.filter(item => {\r\n                const startsWith =\r\n                    item.nama_sjph.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.created_at.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.modified_at.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                const includes =\r\n                    item.nama_sjph.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.created_at.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.modified_at.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                if (startsWith) {\r\n                    return startsWith\r\n                } else if (!startsWith && includes) {\r\n                    return includes\r\n                } else return null\r\n            })\r\n            setFilteredData(updatedData)\r\n            setSearchValue(value)\r\n        }\r\n    }\r\n\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel=''\r\n            nextLabel=''\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(sjph.length / 7) || 1}\r\n            breakLabel='...'\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName='active'\r\n            pageClassName='page-item'\r\n            breakClassName='page-item'\r\n            nextLinkClassName='page-link'\r\n            pageLinkClassName='page-link'\r\n            breakLinkClassName='page-link'\r\n            previousLinkClassName='page-link'\r\n            nextClassName='page-item next-item'\r\n            previousClassName='page-item prev-item'\r\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\r\n        />\r\n    )\r\n\r\n    const onSubmitModal = data => {\r\n        if (Object.values(data).every(field => field.length > 0)) {\r\n            return null\r\n        } else {\r\n            for (const key in data) {\r\n                if (data[key].length === 0) {\r\n                    setError(key, {\r\n                        type: 'manual'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const submit = async () => {\r\n        const body = {\r\n            nama_sjph: sjphName,\r\n            user_id: sessionStorage.user_id\r\n        }\r\n        try {\r\n            const result = await sjphModel.createSJPH(body)\r\n            if ((result.id)||(result.success)) {\r\n                await swal.fire('','Data berhasil di simpan','success')\r\n                    .then(()=>{\r\n                        getSJPH()\r\n                        setShow(false)\r\n                    })\r\n            } else {\r\n                await swal.fire('','Data gagal disimpan', 'error')\r\n            }\r\n        } catch (e) {\r\n            console.error(e)\r\n            await swal.fire('Error', e.error_message ? e.error_message : \"Terjadi Error! Mohon kontak admin.\")\r\n        }\r\n    }\r\n\r\n    const deleteSJPH = async (id) => {\r\n        swal.fire({\r\n            title: \"Peringatan!\",\r\n            text: \"Apakah kamu yakin ingin menghapus data ini?\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButton: \"Iya, tentu saja\",\r\n            cancelButton: \"Tidak\",\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary',\r\n                cancelButton: 'btn btn-danger ms-1'\r\n            },\r\n            buttonsStyling: false\r\n            // dangerMode: true,\r\n        }).then(async (res) => {\r\n            if (res.isConfirmed) {\r\n                try {\r\n                    const result = await sjphModel.deleteSJPH(id);\r\n\r\n                    if (result.id || result.success) {\r\n                        await Swal.fire({\r\n                            icon: \"success\",\r\n                            title: \"Sukses menghapus!\",\r\n                            text: 'Data kamu telah dihapus.',\r\n                            customClass: {\r\n                                confirmButton: 'btn btn-success'\r\n                            }\r\n                        }).then(()=>{\r\n                            getSJPH()\r\n                        })\r\n                    } else {\r\n                        await Swal.fire({\r\n                            title: 'Failed',\r\n                            text: 'Failed to delete',\r\n                            icon: 'error',\r\n                            customClass: {\r\n                                confirmButton: 'btn btn-success'\r\n                        }})\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e)\r\n                    await Swal.fire('', e.error_message ? e.error_message : \"Something Wrong\", 'error')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const reload = async () => {\r\n        window.location.reload()\r\n    }\r\n\r\n    const selectSJPH = async (id,perusahaan_id,name) =>{\r\n        try {\r\n            setDisable(false)\r\n            sessionStorage.sjph_id = id\r\n            sessionStorage.nama_sjph = name\r\n            sessionStorage.perusahaan_id = perusahaan_id\r\n            await reload()\r\n            setTimeout(toast.success(`Anda telah memilih SJPH ${name}`),5000)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const BootstrapCheckbox = forwardRef((props, ref) => (\r\n        <div className='form-check'>\r\n            <Input type='checkbox' ref={ref} {...props} />\r\n        </div>\r\n    ))\r\n\r\n    const columns = [\r\n        {\r\n            name: 'ID',\r\n            // minWidth: '150px',\r\n            selector: row => row.sjph_id,\r\n            sortable: row => row.sjph_id\r\n        },\r\n        {\r\n            name: 'Nama SJPH',\r\n            sortable: true,\r\n            // minWidth: '150px',\r\n            selector: row => row.nama_sjph\r\n        },\r\n        {\r\n            name: 'Dibuat pada',\r\n            sortable: true,\r\n            // minWidth: '150px',\r\n            selector: row => row.created_at\r\n        },\r\n\r\n        {\r\n            name: 'Diubah pada',\r\n            sortable: true,\r\n            // minWidth: '150px',\r\n            selector: row => row.modified_at\r\n        },\r\n        {\r\n            name:  'Pilihan',\r\n            cell:  (row) => {\r\n                // if (sessionStorage.sjph_id === row.sjph_id) {\r\n                //     return (\r\n                //         <Button className='me-1' color='primary' id='buttonPilihan' outline disabled >\r\n                //             Dipilih\r\n                //         </Button>\r\n                //     )\r\n                // }\r\n                return (\r\n                    <Button className='me-1' disabled={sessionStorage.sjph_id === row.sjph_id? disable: false} color='primary' id='buttonPilihan' onClick={()=>{ selectSJPH(row.sjph_id,row.perusahaan_id,row.nama_sjph) }}>\r\n                        Pilih\r\n                    </Button>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            name: 'Tindakan',\r\n            allowOverflow: false,\r\n            cell: (row) => {\r\n                return (\r\n                    <div className='d-flex'>\r\n                        <UncontrolledDropdown>\r\n                            <DropdownToggle className='pe-1' tag='span' >\r\n                                <MoreVertical size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu end>\r\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n                                    <FileText size={15} />\r\n                                    <span className='align-middle ms-50'>Details</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem className='w-100' onClick={()=>{ deleteSJPH(row.sjph_id) }}>\r\n                                    <Trash size={15} />\r\n                                    <span className='align-middle ms-50'>Delete</span>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <Edit size={15} />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    const Content = () => {\r\n        const tour = useContext(ShepherdTourContext)\r\n        instance = tour\r\n\r\n        return (\r\n            <Button className='ms-2' color='primary' onClick={() => tour.start()} >\r\n                <span className='align-middle ms-50'>Mulai Tur!</span>\r\n            </Button>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ShepherdTour\r\n            steps={steps}\r\n            tourOptions={{\r\n                useModalOverlay: true\r\n            }} >\r\n            <Modal isOpen={show} toggle={() => setShow(!show)} className='modal-dialog-centered modal-lg'>\r\n                <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\r\n                <ModalBody className='px-sm-5 mx-50 pb-5'>\r\n                    <div className='text-center mb-2'>\r\n                        <h1 className='mb-1'>Tambah SJPH</h1>\r\n                        <p>Tambah SJPH-mu untuk mulai mengisi modul</p>\r\n                    </div>\r\n                    <Row tag='form' className='gy-1 pt-75'>\r\n                        <Col xs={12}>\r\n                            <Label className='form-label' for='sjphName'>\r\n                                Nama SJPH\r\n                            </Label>\r\n                            <Input id='sjphName' placeholder='SJPH Tahun 2022' value={sjphName} onChange={(e)=> setSJPHName(e.target.value)} invalid={errors.sjphName && true} />\r\n                        </Col>\r\n                        <Col xs={12} className='text-center mt-2 pt-50'>\r\n                            <Button onClick={submit} className='me-1' color='primary'>\r\n                                Kirim\r\n                            </Button>\r\n                            <Button type='reset' color='secondary' outline onClick={() => setShow(false)}>\r\n                                Batal\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle> SJPH-Ku </CardTitle>\r\n                    <div className='d-flex mt-md-0 mt-1'>\r\n                        <UncontrolledButtonDropdown>\r\n                            <DropdownToggle color='secondary' caret outline>\r\n                                <Share size={15} />\r\n                                <span className='align-middle ms-50'>Export</span>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem className='w-100'>\r\n                                    <Printer size={15} />\r\n                                    <span className='align-middle ms-50'>Print</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem className='w-100' onClick={() => navigate('/sjph/export/PDF')}>\r\n                                    <File size={15} />\r\n                                    <span className='align-middle ms-50'>PDF</span>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledButtonDropdown>\r\n                        <Content />\r\n                        {/*<Button className='ms-2' color='primary' onClick={() => tour.start()}>*/}\r\n                        {/*    <Plus size={15} />*/}\r\n                        {/*    <span className='align-middle ms-50'>Mulai Tur!</span>*/}\r\n                        {/*</Button>*/}\r\n                    </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n            <div className='content-header'>\r\n                <h3 className='mb-0'>Daftar SJPH</h3>\r\n                <small className='text-muted'>Berikut adalah tabel daftar SJPH yang dibuat oleh kamu</small>\r\n            </div>\r\n                <Row className='justify-content-end mx-0'>\r\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n                        <Label className='me-1' for='search-input'>\r\n                            Search\r\n                        </Label>\r\n                        <Input\r\n                            className='dataTable-filter mb-50'\r\n                            type='text'\r\n                            bsSize='sm'\r\n                            id='search-input'\r\n                            value={searchValue}\r\n                            onChange={handleFilter}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            <div className='react-dataTable' id= 'dataTable'  >\r\n                <DataTable\r\n                    noHeader\r\n                    pagination\r\n                    selectableRows\r\n                    columns={columns}\r\n                    paginationPerPage={7}\r\n                    className='react-dataTable'\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={searchValue.length ? filteredData : sjph}\r\n                    selectableRowsComponent={BootstrapCheckbox}\r\n                />\r\n            </div>\r\n            &nbsp;\r\n            <Col sm='12'>\r\n                <div className='d-flex justify-content-end'>\r\n                    <Button className='me-1' color='primary' id='buttonTambah' onClick={()=> setShow(true)}>\r\n                        Tambah\r\n                    </Button>\r\n                </div>\r\n            </Col>\r\n                </CardBody>\r\n        </Card>\r\n            </ShepherdTour>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nexport default MySJPHTable\r\n","import {Card, CardHeader, CardBody, CardTitle, CardText, Progress} from 'reactstrap'\nimport MySJPHTable from \"../../../tables/sjph/my_sjph/MySJPHTable\";\n\nconst MySJPHPage = () => {\n\n    return (\n      <div>\n          <MySJPHTable />\n      </div>\n    )\n}\n\nexport default MySJPHPage\n","\r\nimport apiConfig from \"./ApiConfig\"\r\n\r\nexport default class ApiRequest {\r\n    static set = async (endpoint, method, body) => {\r\n\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        // console.log('API ACCESS: ' + token);\r\n        console.log('BODY', JSON.stringify(body))\r\n        const request = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                Accept: 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n            // body: \"afdadsf\"\r\n\r\n        }\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, request)\r\n\r\n        if (response.ok) {\r\n            return response.json()\r\n        }\r\n\r\n        const error = await response.json()\r\n        console.log(error)\r\n        console.log(error.msg)\r\n\r\n        if (error.code === 'JWT_EXPIRED' || error.code === 'NO_TOKEN_PROVIDED' || error.code === 'INVALID_TOKEN' || error.code === 'BAD_TOKEN_FORMAT' || error.code === 'NO_SECRET_DEFINED' || error.error_message === 'JWT_MALFORMED' || error.error_message?.msg === 'JWT_MALFORMED' || error.error_message === 'JWT_EXPIRED' || error.code === \"SUBSCRIPTION_EXPIRED\") {\r\n            delete sessionStorage.token\r\n            delete localStorage.token\r\n            // alert('Login timeout')\r\n            window.location.reload()\r\n            throw error\r\n        }\r\n\r\n        throw error\r\n    }\r\n\r\n    static setMultipart = async (endpoint, method, body) => {\r\n        const token = sessionStorage.token || localStorage.token\r\n\r\n        const response = await fetch(apiConfig.base_url + endpoint, {\r\n            method,\r\n            headers: {\r\n                Authorization: token ? `bearer ${token}` : null,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body\r\n            // body: \"afdadsf\"\r\n        })\r\n\r\n        if (response.ok) {\r\n            console.log(response)\r\n\r\n            return response.json()\r\n        } else {\r\n\r\n            const error = await response.json()\r\n\r\n            console.log(error)\r\n\r\n            throw error\r\n        }\r\n    }\r\n}\r\n","module.exports = {\r\n    base_url: 'https://api.pasporumkm.com'\r\n}"],"sourceRoot":""}